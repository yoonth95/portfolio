import {
  egg,
  eggMbti,
  eggMbtiMain,
  eggMbti1,
  eggMbti2,
  eggMbti3,
  eggMbti4,
  eggMbti5,
  happymanwon,
  happymanwonThumbnail,
  happymanwonMain,
  happymanwonArchitecture,
  happymanwonApi,
  happymanwonErd,
  beta,
  betaTumbnail,
  betaMain,
  betaArchitecture,
  betaApi,
  betaErd,
  betaImageDetail,
  betaImageExhibition,
  betaImageGoogleForm,
  betaImageLikeManage,
  betaImageLike,
  betaImageMain,
  betaImagePostManage,
  betaImagePostUpdate,
  betaImagePostUpload,
  betaImageProfile,
  betaImageProfileAdmin,
  betaImageReservationManageAdmin,
  betaImageReservationManage,
  betaImageReview,
  betaImageReviewManage,
  betaImageShow,
  betaImageStoryManage,
  betaImageStory,
  betaImageToss,
  webBuilder,
  webBuilderThumbnail,
  webBuilderMain,
  webBuilderArchitecture,
  webBuilderApi,
  webBuilderErd,
  youtubeCloneThumbnail,
  youtubeCloneIcon,
  youtubeCloneMain,
  betaFigma,
} from "@/assets/images";

const projectList = [
  {
    projectId: 1,
    name: "egg-mbti",
    type: "개인 프로젝트",
    thumbnail: eggMbti,
    date: "2023-09 ~ 2023-10",
    techStack: [
      ["React", "#d3e5ef"],
      ["Styled-Components", "#dbeddb"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
    ],
    icon: egg,
    title: "[EBTI] 계란 요리 성격 유형 검사",
    team: "1인 프로젝트",
    introduction: "성격 유형 검사를 계란 요리에 비유하여 알려주는 사이트",
    projectMainImg: eggMbtiMain,
    siteLink: "https://egg-mbti.net",
    github: ["https://github.com/yoonth95/EBTI-React"],
    velog: "https://velog.io/@yoonth95/계란-요리-성격-유형-테스트",
    intention: [
      "한 때 유행이었던 성격 유형 검사를 16가지의 계란 요리에 비유하여 성격 및 성장 방법 등을 알려주는 사이트입니다.",
      "초기 단계는 Vanilla JS로 진행을 하고 Firebase로 배포를 했고, 이후에 React로 리팩토링하였습니다.",
      "React, Styled-Components를 사용하여 화면 구성을 했고, AWS를 사용해서 정적 배포를 진행했습니다.",
      "kakao AdFit를 사용해서 광고를 넣어 수익화 적용을 진행했습니다.",
      "ChatGPT를 사용해 계란 요리 유형, 요리와 맞는 성격, 문제, 가중치 등을 설정했습니다.",
      "다양한 일러스트 이미지 등은 MS Bing Image Creator를 사용하여 다양한 이미지를 생성했습니다.",
      "검색엔진 최적화 관련 meta 태그나 robots.txt 설정 등은 진행할 예정입니다.",
    ],
    reference: [
      "kakao AdFit 블로그 포스팅 : https://velog.io/@yoonth95/React-kakao-Adfit-수익화-적용",
      "kakao API : https://developers.kakao.com",
      "ChatGPT : https://chat.openai.com",
      "Bing Image Creator : https://www.bing.com/images/create",
    ],
    projectImgAspectRatio: "1/1",
    projectImgList: [eggMbti1, eggMbti2, eggMbti3, eggMbti4, eggMbti5],
  },
  {
    projectId: 2,
    name: "beta-beta",
    type: "팀 프로젝트",
    thumbnail: betaTumbnail,
    date: "2023-12 ~ 2024-02",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
      ["Amazon RDS", "#ffe2dd"],
    ],
    icon: beta,
    title: "대학생 공연/전시 정보 플랫폼",
    team: "총 3명 / 기획 및 FrontEnd 3명, BackEnd 1명",
    introduction: "예체능 분야 대학생들이 자신의 작품을 소개하고 홍보할 수 있는 중앙 집중형 플랫폼",
    projectMainImg: betaMain,
    siteLink: "https://beta-beta.net",
    github: ["https://github.com/FESP-TEAM-1/beta-frontend", "https://github.com/FESP-TEAM-1/beta-backend"],
    intention: [
      "분산된 정보와 홍보의 어려움으로 예체능 분야의 대학생들의 졸업 작품 또는 정기 행사에 관심과 주목을 받기 어려운 상황에서 효과적으로 소개하고 홍보할 수 있는 플랫폼을 개발했습니다.",
      "3주라는 짧은 프로젝트 기간으로 인한 MVP 개발 및 동작 우선 구현을 목표로 진행했습니다.",
      "총 3명이서 기획과 프론트엔드 개발을 했고 저는 백엔드 API 개발 및 배포까지 진행했습니다.",
      {
        "<b>Vite</b>": [
          "CRA와 비교 했을 때, 모든 모듈을 한 번에 변환하는 반면 요청 시 동적으로 변환하여 직접 로드하기 때문에 개발 시작 속도가 빠름",
          "최소한의 설정으로 eslint 등 사용자 정의 설정을 쉽게 추가할 수 있어서 개발 환경 구성을 Vite로 진행했습니다.",
        ],
      },
      {
        "<b>Zustand</b>": [
          "짧은 러닝 커브와 단일 스토어 관리로 팀원들의 경험을 고려하여 선택했습니다.",
          "경량화된 라이브러리로 프로젝트 크기 및 로딩 시간 최소화하여 다른 상태 관리 라이브러리 대신 진행했습니다.",
          "Provider 사용을 하지 않고 필요한 컴포넌트에 대해서만 트리거하는 시스템이어서 불필요한 리렌더링을 최소화하는 장점이 있어 선택하게 되었습니다.",
        ],
      },
      {
        "<b>Tanstack Query</b>": [
          "서버와의 빈번한 통신을 효율적으로 관리하기 위해 선택했습니다.",
          "자동 데이터 캐싱으로 로딩 시간과 서버 부하를 줄일 수 있어서 사용했습니다.",
          "서버 상태와 클라이언트 데이터를 쉽게 동기화 할 수 있고 백그라운드 데이터 업데이트와 재사용을 용이하게 하는 장점이 있어 선택하게 되었습니다.",
        ],
      },
    ],
    architecture: betaArchitecture,
    figma: betaFigma,
    api: betaApi,
    erd: betaErd,
    responsibleRole: [
      "<b>Vite</b> 및 <b>TypeScript</b>를 사용한 프로젝트 초기 설정 (Proxy, 절대 경로 설정 등)",
      "로그인 / 회원가입 페이지 제작",
      "마이페이지 프로필 및 일반회원 마이페이지 제작",
      "<b>JWT</b> 인증 및 쿠키 기반의 보안 로직을 <b>PrivateRoute</b> 컴포넌트에 통합하여 로그인 시스템 강화",
      "<b>ERD</b> 설계 및 <b>API</b> 명세서 작성",
      "<b>Nodemailer</b> 라이브러리를 사용하여 일반 회원 인증, <b>UNIVCERT API</b>를 사용하여 관리자 회원 인증을 위한 인증 코드 이메일 발송 기능 개발",
      "<b>토스페이먼츠 API</b>를 이용한 예매 시스템 개발",
      "AWS S3를 사용하여 이미지 호스팅 및 관리",
      "AWS S3, CloudFront, Route 53을 사용하여 프론트엔드 배포 / EC2, 로드밸런싱, RDS를 사용하여 백엔드 및 데이터베이스 배포",
      "<b>GitHub Actions</b>를 사용하여 AWS S3로의 코드 자동 배포 파이프라인 설계 및 구현. 프로젝트의 소스 코드 변경 시 자동으로 빌드 및 테스트 수행 후 S3 버킷에 업로드 및 CloudFront 캐시 무효화 진행",
    ],
    projectImgAspectRatio: "16/7",
    projectImgList: [
      {
        "메인 페이지": [betaImageMain, betaImageStory],
        "전시/공연 페이지": [betaImageExhibition, betaImageShow],
        "상세 페이지": [betaImageDetail, betaImageGoogleForm, betaImageLike, betaImageReview, betaImageToss],
        "마이 페이지 - 일반회원": [betaImageProfile, betaImageLikeManage, betaImageReservationManage, betaImageReviewManage, betaImageStoryManage],
        "마이 페이지 - 관리자": [
          betaImagePostManage,
          betaImagePostUpdate,
          betaImagePostUpload,
          betaImageProfileAdmin,
          betaImageReservationManageAdmin,
        ],
      },
    ],
    pageDescription: {
      "메인 페이지": [
        "현재 진행중인 공연/전시의 배너(최신순 5개)를 볼 수 있다.",
        "사람들이 업로드한 공연/전시와 관련된 스토리를 확인할 수 있다.",
        "현재 진행 중인 공연/전시를 날짜별로 확인할 수 있다.",
        "일반 회원만 스토리를 업로드 할 수 있다.",
        "사진과 태그를 입력하여 스토리를 업로드 할 수 있다.",
      ],
      "전시/공연 페이지": ["날짜, 지역, 진행상황(진행중, 종료, 예정), 카테고리 등으로 필터링해서 전시/공연 정보를 확인 할 수 있다."],
      "상세 페이지": [
        "정보 탭: 공연/전시 제목, 주최 대학 및 학과, 기간, 장소, 소개글 등을 확인 할 수 있다.",
        "후기/방명록 탭: 공연/전시 감상 후기 및 방명록을 작성할 수 있다.",
        "공연/전시에 좋아요를 누를 수 있다.",
        "예매는 구글폼으로 예매하는 것과 본 사이트에서 직접 예매하는 방법이 있다.",
      ],
      "마이 페이지 - 일반회원": [
        "자신의 프로필을 수정할 수 있다.",
        "자신이 좋아요를 누른 공연/전시를 확인할 수 있으며 공연/전시카드를 클릭하면 해당 공연/전시의 상세정보페이지로 이동한다.",
        "자신이 남긴 후기/방명록을 확인할 수 있고 이를 삭제할 수 있다. 자신이 남긴 후기/방명록을 클릭 시 해당 공연/전시의 상세정보페이지 후기/방명록 탭으로 이동한다.",
        "자신이 예매한 공연/전시 목록을 확인할 수 있다. 이를 클릭 시 해당 공연/전시에 대한 정보가 뜨고 예매를 취소할 수도 있다.",
        "자신이 작성한 스토리를 확인할 수 있고 이를 삭제할 수 있다.",
      ],
      "마이 페이지 - 관리자": [
        "관리자는 자신의 프로필을 수정할 수 있다.",
        "관리자는 자신의 공연/전시를 어떤 회원이 예매했는지 확인할 수 있다.",
        "관리자는 자신이 어떤 공연/전시 게시글을 적었는지 리스트를 확인할 수 있다. 또한 해당 게시글에 대한 댓글을 확인하고 삭제할 수 있다.",
        "관리자는 공연/전시 게시글을 작성할 수 있다. (사진업로드, 공연/전시 대학 및 학과, 공연/전시 기간, 장소, 소개글, 예매 여부, 구글폼 예매/예매대행 등을 작성할 수 있다)",
        "관리자는 공연/전시 게시글을 수정하거나 삭제할 수 있다.",
      ],
    },
    troubleshooting: {
      "<b>S3 이미지 CORS 오류</b>": [
        "S3에 저장된 이미지를 불러온 후 해당 이미지에 작업(파일로 변환, Canvas에 새로 그리는 작업, html2canvas와 같은 라이브러리 사용 등)을 하게 될 경우 CORS 오류가 발생",
        "해결 과정 : Proxy 설정, 캐시 우회 방법",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/135 target=_blank>https://github.com/FESP-TEAM-1/beta-frontend/issues/135</a>",
      ],
      "<b>Axios 자격 증명 및 엔드포인트 URL 설정 표준화 작업</b>": [
        "API 요청 시 크로스 오리진 이슈와 쿠키 저장 이슈 발생",
        "개발 환경에서는 Proxy 엔드포인트를 설정했지만 배포 환경에서는 Proxy가 동작하지 않아서 전체 URL을 사용해서 API 요청을 하여 해결",
        "백엔드에서 쿠키 저장 시 httpOnly, sameSite, secure 설정으로 서로 다른 port 도메인을 가지고 있기 때문에 쿠키 저장에서 문제가 발생",
        "axios의 withCredentials 설정을 통해 API 요청에 자동으로 쿠키를 포함 시키도록 설정하여 해결",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/101 target=_blank>https://github.com/FESP-TEAM-1/beta-frontend/issues/101</a>",
      ],
      "<b>toast error 여러 번 출력 되는 현상</b>": [
        "메인 페이지에서 총 3개의 API 요청을 진행하는데, 서버거 꺼져 있거나 문제가 발생 시 API는 3개의 에러를 발생시킴 그로 인해 toast 에러 알림 메시지도 3개가 나오게 됨",
        "toast의 limit을 1로 제한 후 clearWaitingQueue를 사용하여 toast 큐에 쌓인 대기 상태 에러를 지움",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/127 target=_blank>https://github.com/FESP-TEAM-1/beta-frontend/issues/127</a>",
      ],
    },
  },
  {
    projectId: 3,
    name: "happymanwon",
    type: "팀 프로젝트",
    thumbnail: happymanwonThumbnail,
    date: "2023-11 ~ 2023-12",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Styled-Components", "#dbeddb"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
    ],
    icon: happymanwon,
    title: "만원의 행복",
    team: "기획 및 디자이너 1명, FrontEnd 2명, BackEnd 3명",
    introduction: "한 푼이라도 아쉬운 사람들을 위한 착한 가게 소개 웹 서비스",
    projectMainImg: happymanwonMain,
    siteLink: "https://happy-manwon.vercel.app",
    github: ["https://github.com/happymanwon/Frontend"],
    intention: [
      "고물가와 고금리로 인해 국민들의 생활비 부담이 증가하여 만원으로 할 수 있는 것이 매우 제한적입니다. 이러한 사회적 흐름에 발맞춰, 단돈 만원으로 저렴하게 이용할 수 있는 착한 가게 들을 알려주는 공공 서비스를 개발 했습니다.",
    ],
    architecture: happymanwonArchitecture,
    figma: "",
    api: happymanwonApi,
    erd: happymanwonErd,
    responsibleRole: [""],
    projectImgAspectRatio: "16/9",
    projectImgList: [""],
  },
  {
    projectId: 4,
    name: "477Tube",
    type: "팀 프로젝트",
    thumbnail: youtubeCloneThumbnail,
    date: "2023-11 ~ 2023-11",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
      ["Supabase", "#3ecf8e"],
    ],
    icon: youtubeCloneIcon,
    title: "477Tube",
    team: "총 3명 / 기획 및 FrontEnd 3명, BackEnd 1명",
    introduction: "유튜브 클론 사이트",
    projectMainImg: youtubeCloneMain,
    siteLink: "https://477tube.netlify.app",
    github: ["https://github.com/FESP-TEAM-1/477Tube-project"],
    intention: ["Zustand, TanstackQuery, Supabase, YouTube Data API 를 활용하여 동영상 시청이 가능한 반응형 웹 사이트 제작"],
    responsibleRole: [""],
    projectImgAspectRatio: "16/9",
    projectImgList: [""],
  },
  {
    projectId: 5,
    name: "web-builder",
    type: "팀 프로젝트",
    thumbnail: webBuilderThumbnail,
    date: "2023-07 ~ 2023-08",
    techStack: [
      ["React", "#d3e5ef"],
      ["Redux toolkit", "#e8deee"],
      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
      ["Amazon RDS", "#ffe2dd"],
    ],
    icon: webBuilder,
    title: "웅진씽크빅 웹 빌더 시스템",
    introduction: "웅진 씽크빅 사이트와 연동이 되는 웹 빌더 관리자 페이지 개발",
    team: "총 4명 / FrontEnd 4명, BackEnd 1명",
    projectMainImg: webBuilderMain,
    siteLink: "https://web-builder.store",
    github: ["https://github.com/yoonth95/Web-Builder"],
    intention: ["개발자나 퍼블리셔가 아닌 누구나 쉽고 빠르게 상세 페이지를 제작 할 수 있는 웹 빌더 시스템을 개발 했습니다."],
    architecture: webBuilderArchitecture,
    figma: "",
    api: webBuilderApi,
    erd: webBuilderErd,
    responsibleRole: [""],
    projectImgAspectRatio: "16/9",
    projectImgList: [""],
  },
];

export { projectList };
