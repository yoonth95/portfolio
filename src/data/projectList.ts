import {
  egg,
  eggMbti,
  eggMbtiMain,
  eggMbti1,
  eggMbti2,
  eggMbti3,
  eggMbti4,
  eggMbti5,
  happymanwon,
  happymanwonThumbnail,
  happymanwonMain,
  happymanwonArchitecture,
  happymanwonApi,
  happymanwonErd,
  happymanwonFigma1,
  happymanwonFigma2,
  happymanwonCategory1,
  happymanwonCategory2,
  happymanwonCategory3,
  happymanwonCommunity1,
  happymanwonCommunity2,
  happymanwonCommunity3,
  happymanwonCommunity4,
  happymanwonMainPage,
  happymanwonMap1,
  happymanwonMap2,
  happymanwonMypage1,
  happymanwonMypage2,
  happymanwonMypage3,
  happymanwonMypage4,
  happymanwonMypage5,
  happymanwonSale1,
  happymanwonSale2,
  happymanwonSale3,
  happymanwonSale4,
  happymanwonSale5,
  beta,
  betaThumbnail,
  betaMain,
  betaFigma,
  betaDuration,
  betaArchitecture,
  betaApi,
  betaErd,
  betaImageDetail,
  betaImageExhibition,
  betaImageGoogleForm,
  betaImageLikeManage,
  betaImageLike,
  betaImageMain,
  betaImagePostManage,
  betaImagePostUpdate,
  betaImagePostUpload,
  betaImageProfile,
  betaImageProfileAdmin,
  betaImageReservationManageAdmin,
  betaImageReservationManage,
  betaImageReview,
  betaImageReviewManage,
  betaImageShow,
  betaImageStoryManage,
  betaImageStory,
  betaImageToss,
  webBuilder,
  webBuilderThumbnail,
  webBuilderMain,
  webBuilderArchitecture,
  webBuilderApi,
  webBuilderErd,
  webBuilderFigma1,
  webBuilderFigma2,
  webBuilderDesign,
  webBuilderLogin,
  webBuilderManage,
  webBuilderEditor11,
  webBuilderEditor12,
  webBuilderEditor13,
  webBuilderEditor21,
  webBuilderEditor22,
  webBuilderEditor23,
  webBuilderMainPage,
  // youtubeCloneThumbnail,
  // youtubeCloneIcon,
  // youtubeCloneMain,
  // youtubeCloneMainPage,
  // youtubeCloneDetail,
  // youtubeCloneSearch,
  aightnow,
  aightnowTumbnail,
  aightnowMain,
  aightnowIntro,
  aightnowApi,
  aightnowDuration,
  aightnowArchitecture,
  aightnowApi2,
  aightnowDiscovery,
  aightnowReport,
  aightnowMypage,
  aightnowMystock,
  aightnowNews,
  aightnowChatbot,
  aightnowMainpage,
  aightnowFind,
  aightnowLogin,
  aightnowPropensity,
  aightnowProfile,
  aightnowForm,
  aightnowAgree,
  duobloomTumbnail,
  duobloom,
  duobloomArchitecture,
  duobloomApi,
  duobloomApi2,
  duobloomDuration,
  duobloomPropulsion21,
  duobloomPropulsion22,
  duobloomPropulsion3,
  duobloomPropulsion11,
  duobloomPropulsion12,
  duobloomPropulsion13,
  duobloomImgFeed1,
  duobloomImgFeed2,
  duobloomImgHospital1,
  duobloomImgHospital2,
  duobloomImgPolicy1,
  duobloomImgPolicy2,
  duobloomImgCommunity1,
  duobloomImgCommunity2,
} from "@/assets/images";

const projectList = [
  {
    projectName: "egg-mbti",
    type: "개인 프로젝트",
    thumbnail: eggMbti,
    date: "2023. 09 ~ 2023. 10",
    techStack: [
      ["React", "#d3e5ef"],
      ["Styled-Components", "#dbeddb"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
    ],
    icon: egg,
    title: "[EBTI] 계란 요리 성격 유형 검사",
    team: "1인 프로젝트",
    introduction: "성격 유형 검사를 계란 요리에 비유하여 알려주는 사이트",
    projectMainImg: eggMbtiMain,
    siteLink: "https://egg-mbti.net",
    github: ["https://github.com/yoonth95/EBTI-React"],
    velog: "https://velog.io/@yoonth95/계란-요리-성격-유형-테스트",
    intention: [
      "한 때 유행이었던 성격 유형 검사를 16가지의 계란 요리에 비유하여 성격 및 성장 방법 등을 알려주는 사이트",
      "초기 단계는 <b>Vanilla JS</b>로 진행을 하고 <b>Firebase</b>로 배포를 했고, 이후에 <b>React</b>로 리팩토링",
      "<b>React</b>, <b>Styled-Components</b>를 사용하여 화면 구성을 했고, <b>AWS</b>를 사용해서 정적 배포",
      "<b>kakao AdFit</b>를 사용해서 광고를 넣어 수익화 적용",
      "<b>ChatGPT</b>를 사용해 계란 요리 유형, 요리와 맞는 성격, 문제, 가중치 등을 설정",
      "다양한 일러스트 이미지 등은 <b>MS Bing Image Creator</b>를 사용하여 다양한 이미지 생성",
      "검색엔진 최적화 관련 meta 태그나 robots.txt 설정으로 구글에 등록",
    ],
    reference: [
      "kakao AdFit 블로그 포스팅 : https://velog.io/@yoonth95/React-kakao-Adfit-수익화-적용",
      "kakao API : https://developers.kakao.com",
      "ChatGPT : https://chat.openai.com",
      "Bing Image Creator : https://www.bing.com/images/create",
    ],
    projectImgAspectRatio: "1/1",
    projectImgList: [eggMbti1, eggMbti2, eggMbti3, eggMbti4, eggMbti5],
  },
  {
    projectName: "duobloom",
    type: "팀 프로젝트",
    thumbnail: duobloomTumbnail,
    date: "2024. 09 ~ 진행중",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Zod", "#3e67b1b0"],
      ["TailwindCSS", "#55555599"],
      ["Shadcn/ui", "#55555599"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],

      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],

      ["Amazon S3", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
    ],
    icon: duobloom,
    title: "난임 부부 종합 케어 서비스",
    team: "총 6명 (개발리드) / 기획 2명, 디자이너 1명, 프론트엔드 2명, 백엔드 1명",
    introduction: "난임 부부의 맞춤형 정책 안내, 전문 병원 정보, 부부 참여형 멘탈케어 활동으로 임신 여정을 지원하는 난임 부부 종합 케어 서비스",
    projectMainImg: duobloomTumbnail,
    siteLink: "https://duo-bloom.com",
    swaggerLink: "https://api.duo-bloom.com/swagger-ui/index.html",
    github: ["https://github.com/orgs/duobloom/repositories"],
    projectPropulsion: [
      [{ "문제 정의": [duobloomPropulsion11, duobloomPropulsion12, duobloomPropulsion13] }, { aspectRatio: "16/9" }],
      [{ "국내 불임 및 난임 산업": [duobloomPropulsion21, duobloomPropulsion22] }, { aspectRatio: "16/9" }],
      [{ 솔루션: duobloomPropulsion3 }, { aspectRatio: "inherit" }],
    ],
    duration: duobloomDuration,
    architecture: duobloomArchitecture,
    api: [duobloomApi, duobloomApi2],
    responsibleRole: [
      "전체 페이지 <b>레이아웃 구성 및 반응형 구현</b>",
      "<b>Shadcn/ui를 활용하여 재사용성을 고려한 공통 컴포넌트 설계</b>",
      "홈 피드, 커뮤니티 페이지 UI 마크업 및 주요 기능 개발",
      "이미지 업로드 시 <b>Canvas 리사이징 및 WebP 압축</b>을 활용하여 이미지 용량을 <b>평균 85.1% 감소</b> <br />(7.84MB → 817kB / 3.12MB → 510kB / 87.3kB → 15.7kB)",
      "<b>Zod와 Axios를 활용한 에러 핸들링 구현</b>",
      "<b>커스텀 Toast Provider 개발</b>로 맞춤형 Alert 제공",
      "아이콘 SVG 컴포넌트 <b>Lazy Loading 적용으로 초기 페이지 로드 크기 52.8% 감소</b> (3.6kB -> 1.7kB)",
      "<b>Pre-Signed URL</b>을 통한 클라이언트에서 S3로 파일 업로드 구축",
      "<b>AWS Route53</b>을 활용한 메인 및 서브 도메인 설정",
      "<b>AWS S3</b>를 이용한 클라이언트 정적 리소스 배포",
      "<b>GitHub Actions</b>를 통한 CI/CD 파이프라인 구축 및 S3 배포, CloudFront 캐시 무효화 진행",
      "<b>구글 서치 콘솔 등록</b> 및 메타태그 활용한 SEO 최적화",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "부부 참여형 대화 피드": [duobloomImgFeed1, duobloomImgFeed2],
        "상담사 연결/멘토링": [duobloomImgCommunity1, duobloomImgCommunity2],
        "맞춤형 난임 정책 추천": [duobloomImgPolicy1, duobloomImgPolicy2],
        "맞춤형 의료 정보 추천": [duobloomImgHospital1, duobloomImgHospital2],
      },
    ],
    pageDescription: {
      "부부 참여형 대화 피드": [
        "부부가 함께 질문 챌린지 참여, 감정일기 작성",
        "상대방이 글이나 답변 작성 시 FCM(Firebase Cloud Messaging)으로 알림 전송 (진행중)",
        "소원해진 부부 사이를 대화와 감정 공유로 회복",
        "난임우울증상담센터 관계자 인터뷰에서 배우자의 정서적 지지가 중요한 평가 항목이라고 답변",
      ],
      "상담사 연결/멘토링": [
        "WebSocket 통신으로 심리 상담사와 채팅 상담 (진행중)",
        "선배 난임 부부의 멘토링 게시판 제공",
        "이미지 Canvas 리사이징 및 Presigned-url 전송 방식으로 이미지 보안 강화",
        "우울증, 스트레스 등 어려움을 겪는 난임 부부들의 심리 문제 해결",
        "사용자 인터뷰에서 휴먼 터치에 대한 니즈, 심리 상담에 비용 지불 의사 확인",
      ],
      "맞춤형 난임 정책 추천": [
        "지역 필터링으로 난임 정책 추천",
        "FCM(Firebase Cloud Messaging)으로 신규 정책, 스크랩한 정책의 마감일 알림 (진행중)",
        "정부24, 지자체 사이트 등, 다양한 플랫폼에 분산되어 있는 정책 정보를 통합",
      ],
      "맞춤형 의료 정보 추천": [
        "지역 필터링으로 병원 정보, 사용자 리뷰 제공",
        "Geolocation, Kakao Map API로 사용자 위치 기반 조회",
        "신뢰할 수 있는 병원, 남성 난임 병원을 찾기 어려운 부부에게 주변 병원 정보와 사용자 리뷰를 제공",
      ],
    },
  },
  {
    projectName: "aightnow",
    type: "팀 프로젝트",
    thumbnail: aightnowTumbnail,
    date: "2024. 06 ~ 2024. 08",
    techStack: [
      ["Next.js", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Zod", "#3e67b1b0"],
      ["TailwindCSS", "#55555599"],
      ["Shadcn/ui", "#55555599"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],

      ["Node.js", "#dbeddb"],
      ["MongoDB", "#47a248b5"],

      ["Vercel", "#c7c7c7"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
    ],
    icon: aightnow,
    title: "해외 주식 분석 플랫폼",
    team: "총 5명 (팀장) / FrontEnd 5명, BackEnd 1명",
    introduction: "실시간 주식 및 뉴스 데이터를 분석해 다국어 맞춤형 리포트를 제공하는 주식 분석 플랫폼",
    projectMainImg: aightnowMain,
    siteLink: "https://aightnow.org",
    swaggerLink: "https://api.aightnow.org/api-docs",
    github: ["https://github.com/orgs/doksuri5/repositories"],
    projectIntroImg: aightnowIntro,
    intention: [
      "<b>Jira, Notion, Discord</b>로 협업을 진행",
      "Jira와 Github를 연동으로 커밋, PR, 브랜치 생성 등 <b>Jira 이슈와 자동으로 연결</b>",
      "API 설계 및 문서화를 위해 <b>Swagger</b> 도입 (<a href='https://api.aightnow.org/api-docs' target=_blank><i><b>https://api.aightnow.org/api-docs</b></i></a>)",
      "각자 맡은 파트를 브랜치별로 진행을 했고 PR Merge 시에는 반드시 <b>팀원들이 코드 리뷰</b>를 작성하게 진행",
      "총 5명이서 프론트엔드 개발을 진행 했고 저는 <b>프론트엔드 포함 백엔드 API 개발 및 배포</b>까지 진행",
      "Next.js에서 인증 시스템을 구현하기 위해 Auth.js 도입",
      {
        "<b>Zod</b>": [
          "TypeScript와의 호환성을 통해 컴파일 타임에 타입 오류를 잡아 런타임 오류를 줄이기 위해 사용",
          "타입을 스키마로 관리하여 데이터 구조를 명확하게 할 수 있기 때문에 사용",
          "API 호출 시 데이터의 유효성을 검증하는 헬퍼 함수를 제작하여 코드의 재사용성을 높이기 위해 사용",
        ],
      },
      {
        "<b>Shadcn/ui</b>": [
          "Tailwind CSS의 유연성을 활용하여 빠르고 효율적인 UI 컴포넌트를 제공하기 위해 사용",
          "사전 정의된 스타일과 구성 요소를 통해 일관된 디자인 시스템을 유지하기 위해 사용",
          "커스터마이징이 용이하여 프로젝트의 요구사항에 맞게 쉽게 수정할 수 있기 때문에 사용",
          "개발 속도를 높이고 반복적인 UI 작업을 줄이기 위해 사용",
        ],
      },
      {
        "<b>Server Sent Event (SSE)</b>": [
          "실시간 주식 데이터는 전자금융감독규정 하에 브라우저에서 직접 가져오는 것이 아닌 DMZ 서버에 구현 후 브라우저로 전달해야 됨",
          "서버에서 클라이언트로 실시간으로 주식 시세 데이터를 전송하여 최신 정보를 즉시 제공하기 위해 사용",
          "단방향 통신으로 클라이언트가 서버에 계속 요청할 필요 없이 서버가 데이터를 푸시할 수 있어, 효율적인 데이터 전송을 위해 사용",
        ],
      },
      {
        "<b>Next-Auth</b>": [
          "간단한 로컬 및 여러 소셜 로그인을 진행하기 위해 사용",
          "인증 정보를 쿠키에 저장하여 자유롭게 정보를 가져올 수 있기 때문에 사용",
          "Next.js의 API 라우트와 통합되어 서버 측에서 인증 로직을 쉽게 구현할 수 있음",
        ],
      },
      {
        "<b>Next-Intl</b>": [
          "웹사이트의 다국어를 지원하기 위해 사용",
          "Next.js의 SSR 기능과 통합되어 초기 페이지 로드 시 언어에 맞는 콘텐츠를 제공하기 위해 사용",
        ],
      },
    ],
    duration: aightnowDuration,
    architecture: aightnowArchitecture,
    api: [aightnowApi, aightnowApi2],
    responsibleRole: [
      "발견 (주식 및 뉴스 검색) 페이지 구현",
      "관심 주식 페이지 구현",
      "Next-Intl을 사용한 <b>다국어 및 미들웨어 설정</b>",
      "Next-Auth의 <b>네이버 소셜 로그인 버그 수정</b>",
      "Next.js <b>SVG (URL, 컴포넌트) 설정</b> 및 적용",
      "디바운스와 <b>es-hangul</b>을 사용하여 초성 및 영어 스펠링 검색 기능 구현",
      "백엔드 세션을 <b>Next 브라우저 쿠키에 저장</b>하는 로직 적용하여 로그인 여부 판별",
      "<b>MongoDB</b>를 사용하여 데이터베이스를 설계 하였고 API 문서화를 위해 <b>Swagger</b> 도입",
      "<b>Puppetter</b>를 사용하여 해외 주식 뉴스 기사 크롤링하였고 <b>Cron-Job</b>을 사용하여 스케줄링 적용",
      "AWS S3를 사용하여 이미지 호스팅 및 관리",
      "AWS EC2, 로드밸런싱을 사용하여 백엔드 API 서버 배포",
      "<b>구글, 네이버 서치 콘솔 등록</b> 및 메타태그 활용으로 SEO 적용",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "로그인 페이지": aightnowLogin,
        "이메일, 비밀번호 찾기 페이지": aightnowFind,
        "회원 가입 페이지": [aightnowAgree, aightnowForm, aightnowProfile, aightnowPropensity],
        "로그인 후 메인 페이지": aightnowMainpage,
        챗봇: aightnowChatbot,
        "발견 페이지": aightnowDiscovery,
        "뉴스 페이지": aightnowNews,
        "관심 종목 페이지": aightnowMystock,
        "마이 페이지": aightnowMypage,
        "리포트 페이지": aightnowReport,
      },
    ],
    pageDescription: {
      "로그인 페이지": [
        "Next-Auth를 사용하여 인증 시스템 구현",
        "아잇나우 회원가입으로 진행한 경우 일반 이메일 로그인 진행",
        "SNS 회원가입으로 진행한 경우 SNS 로그인(구글, 네이버, 카카오) 진행",
        "'자동로그인' 체크 시 일주일간 자동 로그인",
      ],
      "이메일, 비밀번호 찾기 페이지": [
        "이름과 핸드폰 번호로 이메일을 찾을 수 있음",
        "이름과 이메일로 임시 비밀번호를 발급하여 입력한 이메일로 전송",
        "Nodemailer를 사용하여 지정된 폼으로 임시 비밀번호를 이메일 전송",
        "임시 발급한 비밀번호로 로그인 진행",
      ],
      "회원 가입 페이지": [
        "이메일 인증 후 회원가입 진행",
        "SNS 회원가입의 경우 각 소셜마다 제공하는 정보 외의 나머지를 입력하여 회원가입 진행",
        "투자 성향 진단을 통해 유저 별 맞춤형 챗봇 답변 및 개인화된 주식 리포트를 제공",
      ],
      "로그인 후 메인 페이지": [
        "Server Sent Event를 사용하여 Yahoo Finance API로 해외 주식 값이 변동 될 때마다 클라이언트 측으로 전달",
        "1년 이상의 주식 데이터를 GPT에 프롬프트를 넣어서 분석하여 Recharts를 사용하여 그래프 생성",
        "크롤링한 뉴스 데이터를 관심 종목별로 제공",
        "주요 뉴스 및 최신 뉴스 제공",
        "무한 스크롤을 구현하기 위해 Tanstack Query의 useInfiniteQuery를 사용하여 구현",
      ],
      챗봇: [
        "Chat GPT를 사용하여 프롬프트 제공 후 질문에 따른 답변 제공",
        "AI가 필요한 경우 자동으로 함수를 호출해 최신 주식 정보를 실시간으로 제공",
        "검색에 대해 주식 조회 (최대 3개 종목)",
        "6가지 종목에 대한 종목 설명 제공",
        "그래프 투자 지표에 대한 설명 제공",
      ],
      "발견 페이지": [
        "영어 검색 및 es-hangul을 사용하여 한글 초성 검색 가능",
        "검색 조회수에 따른 인기 검색어를 1시간 단위로 제공",
        "Cron-Job을 사용하여 1시간 단위로 검색 조회수 저장 후 클라이언트에서 해당 데이터를 가져옴",
        "검색된 주식 클릭 시 해당 주식 리포트 페이지로 이동",
        "검색된 뉴스 클릭 시 뉴스 상세 페이지로 이동",
        "최근 검색어는 개별 삭제 및 전체 삭제 가능",
      ],
      "뉴스 페이지": [
        "유저가 선택한 언어에 따른 뉴스 기사 제공",
        "상세 페이지에서는 기사와 관련된 주식 종목 및 관련 기사 제공",
        "AI 요약 기능으로 기사에 요약 내용 제공",
      ],
      "관심 종목 페이지": [
        "관심 종목이 하나도 없으면 모달 창이 나오게 됨",
        "발견 페이지와 마찬가지로 영어 및 한글 초성 검색으로 종목 검색 후 종목 추가 및 삭제 진행",
        "관심 종목을 삭제하거나 리포트 페이지로 이동 가능",
        "'관심종목 추가' 버튼 클릭 시 모달 창이 나오게 됨",
      ],
      "마이 페이지": [
        "프로필, 개인정보, 투자 성향 확인 및 수정할 수 있음",
        "회원 탈퇴의 경우 비밀번호를 입력해야 함",
        "언저 설정 탭에서 전체 페이지의 언어를 변경할 수 있음",
        "이용약관 확인",
      ],
      "리포트 페이지": ["실시간 주식 시세 제공 및 기업 정보 제공", "일, 주, 월, 분기, 년 등 주가 차트 제공", "GPT를 활용한 종목 분석 리포트 제공"],
    },
    troubleshooting: {
      "<b>Next.js에서 SVG 사용</b>": [
        "SVG를 React 컴포넌트로 설정 시 일반 URL 방식에서 오류 발생",
        "해결 과정 : svgr 공식 문서를 참고해 컴포넌트, URL 방식 둘 다 허용하게 적용",
        "관련 글 : <a href=https://github.com/doksuri5/frontend/issues/21 target=_blank><i><b>https://github.com/doksuri5/frontend/issues/21</b></i></a>",
      ],
      "<b>Next-Auth 네이버 소셜 로그인 OAuth 오류 및 해결</b>": [
        "Auth.js(Next-Auth) 라이브러리를 사용하여 네이버 소셜 로그인을 구현하는 과정에서 에러 발생",
        "네이버 <b>OAuth2.0</b> 인증 과정에서 발생하며, 인증 응답의 <b>expires_in</b> 속성이 <b>Number</b> 타입이 아닌 <b>String</b> 타입으로 반환 되기 때문에 에러 발생",
        "Next-Auth는 내부적으로 <b>oauth4webapi</b> 라이브러리를 활용하여 인증을 처리하는데, 해당 라이브러리는 <b>expires_in</b> 변수를 <b>Number</b> 타입이 아닌 경우는 오류를 발생하게 되어 있음",
        "<b>patch-package</b> 라이브러리를 사용하여 <b>oauth4webapi</b> 라이브러리를 수정",
        "<b>oauth4webapi</b> 라이브러리에서 <b>expires_in</b> 속성을 체크하는 3곳의 코드를 수정",
        "관련 글 : <a href=https://github.com/doksuri5/frontend/issues/56 target=_blank><i><b>https://github.com/doksuri5/frontend/issues/56</b></i></a>",
      ],
      "<b>백엔드 서버(Node.js)와 클라이언트 서버(Next.js) 간의 쿠키 전달 문제</b>": [
        "Next.js의 프론트 서버에서 백엔드에 요청을 보내고 응답으로 받은 쿠키를 처리하려고 할 때, 실제로는 <b>클라이언트 측에 쿠키가 설정되지 않는 현상</b>이 발생",
        "백엔드 서버에서 response에 설정한 쿠키 값을 프론트 서버에서는 프론트 브라우저에 전달하는 과정을 한 번 더 거치는 방법으로 해결",
        "관련 글 : <a href=https://github.com/doksuri5/frontend/issues/58 target=_blank><i><b>https://github.com/doksuri5/frontend/issues/58</b></i></a>",
      ],
    },
  },
  {
    projectName: "beta-beta",
    type: "팀 프로젝트",
    thumbnail: betaThumbnail,
    date: "2023. 12 ~ 2024. 02",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
      ["Amazon RDS", "#ffe2dd"],
    ],
    icon: beta,
    title: "대학생 공연/전시 정보 플랫폼",
    team: "총 3명 (팀장) / 기획 및 FrontEnd 3명, BackEnd 1명",
    introduction: "예체능 분야 대학생들이 자신의 작품을 소개하고 홍보할 수 있는 중앙 집중형 플랫폼",
    projectMainImg: betaMain,
    // siteLink: "https://beta-beta.net",
    github: ["https://github.com/FESP-TEAM-1/beta-frontend", "https://github.com/FESP-TEAM-1/beta-backend"],
    intention: [
      "분산된 정보와 홍보의 어려움으로 예체능 분야의 대학생들의 졸업 작품 또는 정기 행사에 관심과 주목을 받기 어려운 상황에서 효과적으로 소개하고 홍보할 수 있는 플랫폼을 개발",
      "3주라는 짧은 프로젝트 기간으로 인한 <b>MVP 개발 및 동작 우선 구현</b>을 목표로 진행",
      "각자 맡은 파트를 브랜치별로 진행을 했고 PR Merge 시에는 반드시 <b>팀원 모두 코드 리뷰</b>를 작성하게 진행",
      "총 3명이서 기획과 프론트엔드 개발을 했고 저는 백엔드 API 개발 및 배포까지 진행",
      "3주 프로젝트 기간 이후 버그 수정, 리팩토링, 최적화를 진행",
      {
        "<b>Vite</b>": [
          "CRA와 비교 했을 때, 모든 모듈을 한 번에 변환하는 반면 요청 시 동적으로 변환하여 직접 로드하기 때문에 개발 시작 속도가 빠르다는 장점",
          "최소한의 설정으로 eslint 등 사용자 정의 설정을 쉽게 추가할 수 있어서 개발 환경 구성을 Vite로 진행",
        ],
      },
      {
        "<b>Zustand</b>": [
          "짧은 러닝 커브와 단일 스토어 관리로 팀원들의 경험을 고려하여 선택",
          "경량화된 라이브러리로 프로젝트 크기 및 로딩 시간 최소화하여 다른 상태 관리 라이브러리 대신 진행",
          "Provider 사용을 하지 않고 필요한 컴포넌트에 대해서만 트리거하는 시스템이어서 불필요한 리렌더링을 최소화하는 장점이 있어 선택",
        ],
      },
      {
        "<b>Tanstack Query</b>": [
          "서버와의 빈번한 통신을 효율적으로 관리하기 위해 선택",
          "자동 데이터 캐싱으로 로딩 시간과 서버 부하를 줄일 수 있어서 사용",
          "서버 상태와 클라이언트 데이터를 쉽게 동기화 할 수 있고 백그라운드 데이터 업데이트와 재사용을 용이하게 하는 장점이 있어 선택",
        ],
      },
    ],
    duration: betaDuration,
    architecture: betaArchitecture,
    figma: betaFigma,
    api: betaApi,
    erd: betaErd,
    responsibleRole: [
      "<b>Vite</b> 및 <b>TypeScript</b>를 사용한 프로젝트 초기 설정 (Proxy, 절대 경로 설정 등)",
      "로그인 / 회원가입 페이지 제작",
      "마이페이지 프로필 및 일반회원 마이페이지 제작",
      "<b>JWT</b> 인증 및 쿠키 기반의 보안 로직을 <b>PrivateRoute</b> 컴포넌트에 통합하여 로그인 시스템 강화",
      "<b>ERD</b> 설계 및 <b>API</b> 명세서 작성",
      "<b>Nodemailer</b> 라이브러리를 사용하여 일반 회원 인증, <b>UNIVCERT API</b>를 사용하여 관리자 회원 인증을 위한 인증 코드 이메일 발송 기능 개발",
      "토스페이먼츠 API를 이용한 <b>예매 시스템 개발</b>",
      "AWS S3를 사용하여 이미지 호스팅 및 관리",
      "AWS S3, CloudFront, Route 53을 사용하여 프론트엔드 배포 / EC2, 로드밸런싱, RDS를 사용하여 백엔드 및 데이터베이스 배포 (<i><b>현재는 AWS Free Tier 만료로 인해 서버를 닫은 상태입니다.</b></i>)",
      "<b>GitHub Actions</b>를 사용하여 AWS S3로의 코드 자동 배포 파이프라인 설계 및 구현. 프로젝트의 소스 코드 변경 시 자동으로 빌드 및 테스트 수행 후 S3 버킷에 업로드 및 CloudFront 캐시 무효화 진행",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "메인 페이지": [betaImageMain, betaImageStory],
        "전시/공연 페이지": [betaImageExhibition, betaImageShow],
        "상세 페이지": [betaImageDetail, betaImageGoogleForm, betaImageLike, betaImageReview, betaImageToss],
        "마이 페이지 - 일반회원": [betaImageProfile, betaImageLikeManage, betaImageReservationManage, betaImageReviewManage, betaImageStoryManage],
        "마이 페이지 - 관리자": [
          betaImagePostManage,
          betaImagePostUpdate,
          betaImagePostUpload,
          betaImageProfileAdmin,
          betaImageReservationManageAdmin,
        ],
      },
    ],
    pageDescription: {
      "메인 페이지": [
        "현재 진행중인 공연/전시의 배너(최신순 5개)를 확인 가능",
        "사람들이 업로드한 공연/전시와 관련된 스토리 확인",
        "현재 진행 중인 공연/전시를 날짜별로 확인",
        "일반 회원만 스토리를 업로드 할 수 있음",
        "사진과 태그를 입력하여 스토리를 업로드 할 수 있음",
      ],
      "전시/공연 페이지": ["날짜, 지역, 진행상황(진행중, 종료, 예정), 카테고리 등으로 필터링해서 전시/공연 정보를 확인 할 수 있음"],
      "상세 페이지": [
        "정보 탭: 공연/전시 제목, 주최 대학 및 학과, 기간, 장소, 소개글 등을 확인 가능",
        "후기/방명록 탭: 공연/전시 감상 후기 및 방명록을 작성",
        "공연/전시에 좋아요를 누를 수 있음",
        "예매는 구글폼으로 예매하는 것과 본 사이트에서 직접 예매하는 방법",
      ],
      "마이 페이지 - 일반회원": [
        "자신의 프로필을 수정",
        "자신이 좋아요를 누른 공연/전시를 확인할 수 있으며 공연/전시카드를 클릭하면 해당 공연/전시의 상세 정보 페이지로 이동",
        "자신이 남긴 후기/방명록을 확인할 수 있고 이를 삭제할 수 있다. 자신이 남긴 후기/방명록을 클릭 시 해당 공연/전시의 상세정보페이지 후기/방명록 탭으로 이동",
        "자신이 예매한 공연/전시 목록을 확인할 수 있다. 이를 클릭 시 해당 공연/전시에 대한 정보가 뜨고 예매를 취소 가능",
        "자신이 작성한 스토리를 확인할 수 있고 이를 삭제할 수 있음",
      ],
      "마이 페이지 - 관리자": [
        "관리자는 자신의 프로필을 수정할 수 있음",
        "관리자는 자신의 공연/전시를 어떤 회원이 예매했는지 확인할 수 있음",
        "관리자는 자신이 어떤 공연/전시 게시글을 적었는지 리스트를 확인할 수 있다. 또한 해당 게시글에 대한 댓글을 확인하고 삭제할 수 있음",
        "관리자는 공연/전시 게시글을 작성할 수 있다. (사진업로드, 공연/전시 대학 및 학과, 공연/전시 기간, 장소, 소개글, 예매 여부, 구글폼 예매/예매대행 등을 작성할 수 있다)",
        "관리자는 공연/전시 게시글을 수정하거나 삭제할 수 있음",
      ],
    },
    troubleshooting: {
      "<b>S3 이미지 CORS 오류</b>": [
        "S3에 저장된 이미지를 불러온 후 해당 이미지에 작업(파일로 변환, Canvas에 새로 그리는 작업, html2canvas와 같은 라이브러리 사용 등)을 하게 될 경우 CORS 오류가 발생",
        "해결 과정 : Proxy 설정, 캐시 우회 방법",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/135 target=_blank><i><b>https://github.com/FESP-TEAM-1/beta-frontend/issues/135</b></i></a>",
      ],
      "<b>Axios 자격 증명 및 엔드포인트 URL 설정 표준화 작업</b>": [
        "API 요청 시 크로스 오리진 이슈와 쿠키 저장 이슈 발생",
        "개발 환경에서는 Proxy 엔드포인트를 설정했지만 배포 환경에서는 Proxy가 동작하지 않아서 전체 URL을 사용해서 API 요청을 하여 해결",
        "백엔드에서 쿠키 저장 시 httpOnly, sameSite, secure 설정으로 서로 다른 port 도메인을 가지고 있기 때문에 쿠키 저장에서 문제가 발생",
        "axios의 withCredentials 설정을 통해 API 요청에 자동으로 쿠키를 포함 시키도록 설정하여 해결",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/101 target=_blank><i><b>https://github.com/FESP-TEAM-1/beta-frontend/issues/101</b></i></a>",
      ],
      "<b>toast error 여러 번 출력 되는 현상</b>": [
        "메인 페이지에서 총 3개의 API 요청을 진행하는데, 서버거 꺼져 있거나 문제가 발생 시 API는 3개의 에러를 발생시킴 그로 인해 toast 에러 알림 메시지도 3개가 나오게 됨",
        "toast의 limit을 1로 제한 후 clearWaitingQueue를 사용하여 toast 큐에 쌓인 대기 상태 에러를 지움",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/127 target=_blank><i><b>https://github.com/FESP-TEAM-1/beta-frontend/issues/127</b></i></a>",
      ],
    },
  },
  {
    projectName: "happymanwon",
    type: "팀 프로젝트",
    thumbnail: happymanwonThumbnail,
    date: "2023. 11 ~ 2023. 12",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Styled-Components", "#dbeddb"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
    ],
    icon: happymanwon,
    title: "만원의 행복",
    team: "기획 및 디자이너 1명, FrontEnd 2명, BackEnd 3명",
    introduction: "한 푼이라도 아쉬운 사람들을 위한 착한 가게 소개 웹 서비스",
    projectMainImg: happymanwonMain,
    siteLink: "https://happy-manwon.vercel.app",
    github: ["https://github.com/happymanwon/Frontend"],
    intention: [
      "고물가와 고금리로 인해 국민들의 생활비 부담이 증가하여 만원으로 할 수 있는 것이 매우 제한적입니다. 이러한 사회적 흐름에 발맞춰, 단돈 만원으로 저렴하게 이용할 수 있는 착한 가게 들을 알려주는 공공 서비스를 개발",
      "공모전을 기반으로 진행한 프로젝트로 서울시 착한 가격 업소 API 데이터를 활용하여 만원의 행복 서비스 반응형 웹(Web)환경의 서비스 제공",
      "프론트엔드와 백엔드 레포지토리를 따로 관리하여 진행했고 Github Webhooks을 사용하여 Discord 알림을 주고 소통하면서 진행",
    ],
    architecture: happymanwonArchitecture,
    figma: [happymanwonFigma1, happymanwonFigma2],
    api: happymanwonApi,
    erd: happymanwonErd,
    responsibleRole: [
      "해당 프로젝트는 다른 프로젝트와의 일정이 겹치는 동안에도 진행되었으며, 프로젝트 초기 설정과 전체적인 페이지 레이아웃 설계에 중점을 두었습니다. 특히, 반응형 디자인에 주력하여 모든 화면 크기에서 사용자 경험이 최적화되도록 진행",
      "<b>Python BeautifulSoup</b> 라이브러리를 활용하여 서울특별시 물가 정보 사이트로부터 착한 가격 업소의 주요 품목 데이터를 크롤링하고 정제된 데이터를 JSON 파일로 변환하여 데이터 저장, 가격 정보 제공 시스템에 기여",
      "전체 페이지 레이아웃 구성 및 반응형 구현과 동시에 공통 컴포넌트 설계",
      "짠지도 및 상세 페이지 지도 서비스 UI 및 기능 제작",
      "<b>Kakao Map API</b>를 사용하여 사용자의 현재 위치 또는 지도에서 현재 보고 있는 곳에서 2km 반경 내의 업소 정보를 지도에 표시",
      "<b>react-spring-bottom-sheet</b> 라이브러리에서 필요한 값들만 사용하여 네이버 지도와 같은 맞춤형 바텀시트를 구현",
      "단짠단짠 페이지 UI 제작",
      "마이페이지 UI 제작",
      "<b>Vercel</b>을 활용하여 애플리케이션 배포. 리다이렉션 규칙 및 API 라우터 설정 진행",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "메인 페이지": happymanwonMainPage,
        "카테고리 페이지": [happymanwonCategory1, happymanwonCategory2, happymanwonCategory3],
        "짠지도 페이지": [happymanwonMap1, happymanwonMap2],
        "짠처리 페이지": [happymanwonSale1, happymanwonSale2, happymanwonSale3, happymanwonSale4, happymanwonSale5],
        "단짠단짠 페이지": [happymanwonCommunity1, happymanwonCommunity2, happymanwonCommunity3, happymanwonCommunity4],
        "로그인 및 마이페이지": [happymanwonMypage1, happymanwonMypage2, happymanwonMypage3, happymanwonMypage4, happymanwonMypage5],
      },
    ],
    pageDescription: {
      "메인 페이지": [
        "검색 창에 원하는 키워드 입력 시 지정한 구역에서 해당 키워드를 가진 가게들의 대한 정보를 볼 수 있는 페이지로 이동",
        "모바일 화면의 경우 좌측 상단에는 현재 본인의 위치에 대한 구역 이름이 출력",
        "구역 이름 클릭 시 보고 싶은 구역 선택",
        "중앙에 있는 카테고리 버튼 클릭 시 지정한 구역에 대한 카테고리 별 가게들의 대한 정보를 볼 수 있는 페이지로 이동",
        "하단의 네비게이션 바를 통해 자유롭게 원하는 항목으로 이동",
      ],
      "카테고리 페이지": [
        "헤더에 카테고리를 누르면 해당 카테고리의 가게로 필터링된 리스트가 보임",
        "개별 사진을 누르면 해당 가게 디테일 페이지로 이동",
        "지역구 selectBox를 통해 원하는 지역구만 필터링된 리스트가 보임",
        "헤더에 가게사진, 가게이름, 지역구, 주메뉴, 좋아요 개수 출력",
        "좋아요 버튼을 통해 가게 좋아요 표시",
        "공유하기 버튼 클릭시, 링크 복사 & 카카오 공유하기 중 선택 가능",
        "가게 영업시간 정보, 메뉴 리스트 및 가격 출력",
        "카카오 지도를 통해 가게의 위치를 가시적인 지도로 출력",
        "복사 버튼을 통해 가게 주소를 클립보드에 복사",
        "주소 하단에 가게 찾아오는길을 출력",
      ],
      "짠지도 페이지": [
        "위치 기반 착한 가게 검색을 제공합니다.",
        "보여줄 가게들에 대해서 핀으로 지도에 출력",
        "핀 클릭 시 가게에 대한 상세 정보 출력",
        "오른쪽 하단 “위치 모양” 클릭 시 현재 위치로 지도 이동",
        "중앙 상단 “현 지도에서 검색” 클릭 시 사용자가 현재 보고 있는 지도 위치에서 반경 2km 가게들을 핀으로 지도에 출력",
        "상단 검색 바에 원하는 키워드 검색 시 해당 키워드를 가지고 있는 가게들에 대해서 핀으로 지도에 출력",
        "하단의 바텀시트를 위로 드래그하여 여러 가게들에 대한 정보 등을 볼 수 있음",
        "가게 클릭 시 (이미지 또는 텍스트) 상세 페이지로 이동",
      ],
      "짠처리 페이지": [
        "가게의 할인 상품을 판매합니다.",
        "헤더에 “구매내역”버튼을 통해 사용자가 구매한 상품이 있는 페이지로 이동",
        "상단 지역구 selectBox를 통해 판매글을 올린 가게들을 지역구별로 필터링",
        "개별 카드 컴포넌트를 누르면 판매 상세 페이지로 이동",
        "상단에 판매상품, 남은수량, 기존가격, 할인율, 판매가격 출력",
        "구매하기 버튼을 누르면 서버와 통신하여 수량이 남았거나, 판매기한이 남았거나, 구매할 수 있는 포인트가 있을 경우 구매 확인이 뜨며, 사용자의 구매내역에 추가",
        "가게 소개 및 가격 출력",
        "카카오 지도를 통해 가게의 위치를 가시적인 지도로 출력",
        "복사 버튼을 통해 가게 주소를 클립보드에 복사",
      ],
      "단짠단짠 페이지": [
        "커뮤니티 기능을 제공합니다.",
        "상단 검색 바에 키워드 입력 시 커뮤니티 게시글의 태그를 검색 키워드로 필터링하여 화면에 출력",
        "“내글보기” 버튼 클릭으로 내가 작성한 게시글만 필터링하여 화면에 출력",
        "게시글 우측 상단의 버튼 클릭 시 신고 및 숨기기 버튼으로 게시글을 신고하거나 본인 기준에서 게시글 숨기기",
        "숨긴 게시글은 “되돌리기” 버튼을 클릭하여 다시 보이게 할 수 있음",
        "이미지는 터치 이벤트로 슬라이드 형태로 볼 수 있음",
        "게시글 클릭 시 게시글 상세 페이지로 이동",
        "헤더에 tagify를 이용해 태그를 입력",
        "하단에 사진첨부, 지도첨부 기능을 활용해서 다중사진과 원하는 가게 지도를 첨부",
        "상단에 옵션 버튼으로 수정, 삭제를 선택",
        "게시글 작성 페이지에서 완료 버튼을 통해 게시글을 올릴 수 있음",
        "글쓴이가 수정 클릭시 글 수정페이지로 이동",
        "게시글 수정 페이지에서 완료 버튼을 통해 특정 게시글 ID 값을 가진 게시글 내용을 수정할 수 있음",
        "글쓴이가 삭제 클릭시 게시글을 삭제할 수 있음",
        "하단의 댓글달기 기능을 이용해 댓글을 작성하면 해당 글에 댓글을 달 수 있음",
      ],
      "로그인 및 마이페이지": [
        "소셜 로그인 시 마이페이지로 이동하여 개인정보 등을 볼 수 있음",
        "프로필 수정 페이지에서 이미지 클릭 시 프로필 사진이나 닉네임을 변경할 수 있음",
        "짠처리 결제 관리 페이지에서 본인이 결제한 가게들의 리스트를 보여줌, QR코드의 사용 여부를 알 수 있고 클릭 시 QR코드 화면으로 이동",
        "충전 및 사용 내역 페이지에서 포인트 충전 및 사용에 대한 내역을 볼 수 있음",
        "커뮤니티 관리 페이지에서 커뮤니티 글에 대해 수정 삭제 가능",
      ],
    },
    troubleshooting: {
      "<b>Vite에서 SVG 컴포넌트화</b>": [
        "최신 버전 Vite에서 React SVG 컴포넌트화 하는 과정에서 오류가 발생",
        "해결 과정 : <b>vite-plugin-svgr</b> 라이브러리 4.0.0 이상 버전에서는 SVG 파일을 가져올 때, <b>?react</b>라는 접미사를 붙여 앨리어싱을 건너뛰어 진행",
        "관련 글 : <a href=https://velog.io/@yoonth95/SVG-파일-React-Component로-가져오기-Vite-TypeScript target=_blank><i><b>https://velog.io/@yoonth95/SVG-파일-React-Component로-가져오기-Vite-TypeScript</b></i></a>",
      ],
    },
  },
  {
    projectName: "web-builder",
    type: "팀 프로젝트",
    thumbnail: webBuilderThumbnail,
    date: "2023. 07 ~ 2023. 08",
    techStack: [
      ["React", "#d3e5ef"],
      ["Redux toolkit", "#e8deee"],
      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
      ["Amazon RDS", "#ffe2dd"],
    ],
    icon: webBuilder,
    title: "웅진씽크빅 웹 빌더 시스템",
    introduction: "웅진 씽크빅 사이트와 연동이 되는 웹 빌더 관리자 페이지 개발",
    team: "총 4명 (팀장) / FrontEnd 4명, BackEnd 1명",
    projectMainImg: webBuilderMain,
    // siteLink: "https://web-builder.store",
    github: ["https://github.com/yoonth95/Web-Builder"],
    intention: [
      "개발자나 퍼블리셔가 아닌 누구나 쉽고 빠르게 상세 페이지를 제작 할 수 있는 웹 빌더 시스템을 개발",
      "총 4명이서 프론트엔드 개발을 했고 저는 백엔드 API 개발 및 배포까지 진행",
      "웅진 씽크빅 홈페이지를 간편하게 만들 수 있는 관리자 웹 빌더 시스템을 요구해서 진행하게 되었고 디자인 Figma는 제공를 받음",
      "Figma와 똑같이 하기보단 저희만의 방식대로 진행하는 것을 원하셨고 <b>디자인을 토대로 기획을 더 얹어</b> 개발을 진행",
      "<b>드래그 앤 드랍 기능, 블록 디자인 복원 기능, 블록 배경색 및 여백 기능</b> 등을 추가로 진행",
      {
        "<b>Redux-toolkit</b>": [
          "가장 많이 사용한다는 점과 팀원들의 경험을 고려했을 때, 다른 상태 관리 라이브러리를 공부하는 것 보다 완성도 있는 프로젝트를 만들기 위해 다들 사용해본 Redux를 선택",
          "Redux-toolkit은 Redux의 보일러플레이트 코드를 상당히 줄여주고 최적화 및 직관적으로 작성할 수 있어 선택",
        ],
      },
      {
        "<b>JWT</b>": [
          "관리자 사이트의 보안이 중요하기 때문에, 회원 인증을 체계적으로 관리할 필요가 있다고 판단하여 사용",
          "토큰의 경우 로컬 스토리지가 아닌 CSRF, XSS 방지를 위해 <b>SameSite, HttpOnly, Secure</b> 설정을 하고 쿠키에 저장을 하여 보안을 강화하고 관리를 용이하게 진행",
        ],
      },
    ],
    architecture: webBuilderArchitecture,
    figma: [webBuilderFigma1, webBuilderFigma2],
    api: webBuilderApi,
    erd: webBuilderErd,
    responsibleRole: [
      "로그인 및 회원가입 페이지 제작",
      "<b>JWT</b> 인증 및 쿠키 기반의 보안 로직을 <b>PrivateRoute</b> 컴포넌트에 통합하여 로그인 시스템 강화",
      "메뉴 관리 페이지 UI 및 기능 제작",
      "react-beautiful-dnd 드래그 앤 드랍 라이브러리를 사용하여 관리 페이지의 순서를 유연하게 바꿀 수 있게 진행",
      "디자인 편집 페이지 UI 및 기능 제작",
      "웹 에디터 페이지를 개발하면서 <b>블록 디자인 시스템을 JSON 파일 구성만으로 원하는 디자인을 쉽게 만들 수 있도록</b> 유지보수, 재사용성 측면을 획기적으로 개선",
      "변경 사항 실시간 저장 및 히스토리를 관리하여 <b>블록 디자인을 히스토리 별로 복원하는 기능</b>을 개발",
      "블록 디자인 요소 뿐만 아니라 배경색 및 여백 등도 사용자가 자유롭게 줄 수 있도록 개발",
      "<b>ERD</b> 설계 및 <b>API</b> 명세서 작성",
      "AWS S3를 사용하여 이미지 호스팅 및 관리",
      "Cafe24에서 도매인 구입 후 AWS Route 53으로 도메인 이전 작업 진행",
      "AWS S3, CloudFront, Route 53을 사용하여 프론트엔드 배포 / EC2, 로드밸런싱, RDS를 사용하여 백엔드 및 데이터베이스 배포 (<i><b>현재는 AWS Free Tier 만료로 인해 서버를 닫은 상태입니다.</b></i>)",
      "<b>GitHub Actions</b>를 사용하여 AWS S3로의 코드 자동 배포 파이프라인 설계 및 구현. 프로젝트의 소스 코드 변경 시 자동으로 빌드 및 테스트 수행 후 S3 버킷에 업로드 및 CloudFront 캐시 무효화 진행",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "관리자 로그인 페이지": webBuilderLogin,
        "메뉴 관리 페이지": webBuilderManage,
        "디자인 관리 페이지": webBuilderDesign,
        "디자인 편집 페이지 (1)": [webBuilderEditor11, webBuilderEditor12, webBuilderEditor13],
        "디자인 편집 페이지 (2)": [webBuilderEditor21, webBuilderEditor22, webBuilderEditor23],
        "웅진 씽크빅 메인 페이지": webBuilderMainPage,
      },
    ],
    pageDescription: {
      "관리자 로그인 페이지": ["로그인을 진행", "아이디, 비밀번호 일치 여부 제공"],
      "메뉴 관리 페이지": [
        "상위 메뉴를 추가 및 수정, 삭제 가능",
        "상위 메뉴 생성 후 하위 메뉴를 추가 및 수정, 삭제 가능",
        "상위, 하위 메뉴는 연결될 주소 및 새 창 여부 등을 넣을 수 있음",
        "<b>드롭 다운</b>으로 상위 메뉴에 속한 하위 메뉴를 볼 수 있음",
        "각 메뉴별로 <b>드래그 앤 드랍</b>으로 순서를 자유롭게 바꿀 수 있음",
      ],
      "디자인 관리 페이지": [
        "하위 메뉴 별 디자인을 관리할 수 있는 페이지",
        "페이지 경로, 속한 상위 메뉴, 업데이트 일시 등을 볼 수 있고 하위 메뉴 이름으로 검색 가능",
        "비슷한 디자인의 페이지인 경우 <b>복제</b> 버튼으로 다른 하위 메뉴 페이지의 디자인을 가져올 수 있음",
        "<b>편집</b> 버튼으로 디자인 편집 페이지로 이동할 수 있음",
      ],
      "디자인 편집 페이지 (1)": [
        "디자인 편집 페이지에서 <b>블록별 디자인을 선택</b>할 수 있음",
        "JSON 파일에 있는 <b>6가지의 디자인 패턴</b>이 있음 이는 <b>JSON 파일을 수정하여 추가로 등록</b>할 수 있음",
        "이미지 패턴을 선택 시 블록에 이미지 패턴 디자인이 들어가게 되고 이미지를 첨부할 수 있음",
        "레이아웃 패턴 선택 시 블록에 레이아웃이 들어가게 되는데, 각 레이아웃 마다 또 다른 디자인 패턴을 넣을 수 있음",
      ],
      "디자인 편집 페이지 (2)": [
        "디자인 편집 페이지는 웹 페이지 반응형을 미리 볼 수 있게 <b>PC, Tablet, Mobile</b> 화면을 선택하여 볼 수 있음",
        "각 블록별로 배경색과 위 아래 여백을 줄 수 있음",
        "<b>저장</b> 버튼을 누르면 저장된 시간에 따른 디자인이 저장되게 됩니다. 이는 <b>복원하기</b> 버튼으로 저장된 시간대로 이동하여 이전에 작성한 디자인으로 바뀌게 됨",
      ],
      "웅진 씽크빅 메인 페이지": [
        "원래는 실제 웅진 씽크빅 메인 페이지와 연결하여 확인할 수 있지만 과제형 프로젝트이기 때문에 <b>확인용 테스트 페이지를 따로 제작</b>",
        "메인 페이지에 접근하게 되면 <b>메뉴 관리 페이지</b>에서 만든 메뉴들을 확인할 수 있고 각 하위 메뉴로 접속하면 만들어둔 디자인을 확인할 수 있음",
      ],
    },
  },
  // {
  //   projectName: "youtube-clone",
  //   type: "팀 프로젝트",
  //   thumbnail: youtubeCloneThumbnail,
  //   date: "2023. 11 ~ 2023. 11",
  //   techStack: [
  //     ["React", "#d3e5ef"],
  //     ["TypeScript", "#c8ecf1"],
  //     ["Tanstack Query", "#ffe494"],
  //     ["Zustand", "#c7c7c7"],
  //     ["Supabase", "#3ecf8e"],
  //   ],
  //   icon: youtubeCloneIcon,
  //   title: "477Tube",
  //   team: "총 3명 (팀장) / 기획 및 FrontEnd 3명, BackEnd 1명",
  //   introduction: "유튜브 클론 사이트",
  //   projectMainImg: youtubeCloneMain,
  //   siteLink: "https://477tube.netlify.app",
  //   github: ["https://github.com/FESP-TEAM-1/477Tube-project"],
  //   intention: [
  //     "<b>Zustand, Tanstack Query, Supabase, YouTube Data API</b> 를 활용하여 동영상 시청이 가능한 반응형 웹 사이트 제작",
  //     "2주 프로젝트 기간으로 <b>미션별 과제 수행</b>을 진행",
  //     "Zustand, TanstackQuery 등 익숙하지 않은 라이브러리 사용 경험을 높이는 것을 목표로 둠",
  //     "운영서버(YOUTUBE)인지 또는 개발서버(json 데이터)에 따라 개발",
  //     "각자 맡은 파트를 브랜치별로 진행을 했고 PR Merge 시에는 반드시 <b>팀원 모두 코드 리뷰</b>를 작성하게 진행",
  //   ],
  //   responsibleRole: [
  //     "메인 페이지 UI 및 기능 개발",
  //     "썸네일 마우스 hover 시 화면 확대 후 자동 재생 기능 개발",
  //     "<b>Tanstack Query</b>를 사용하여 무한 스크롤 구현",
  //     "메인, 상세, 검색 페이지 반응형",
  //     "<b>Supabase</b> 초기 설정 및 데이터베이스 설계 및 연결 작업 진행",
  //     "<b>Netlify</b>를 활용하여 애플리케이션 배포. 리다이렉션 규칙 설정 진행",
  //   ],
  //   projectImgAspectRatio: "16/9",
  //   projectImgList: [
  //     {
  //       "메인 페이지": youtubeCloneMainPage,
  //       "상세 페이지": youtubeCloneDetail,
  //       "검색 페이지 및 테마": youtubeCloneSearch,
  //     },
  //   ],
  //   pageDescription: {
  //     "메인 페이지": [
  //       "Youtube API를 사용해서 현재 Youtube에 올라온 영상들을 띄움",
  //       "<b>무한 스크롤로 여러 영상</b>들을 나눠서 가져옴",
  //       "<b>썸네일에 마우스 hover 시 확대 및 자동 재생</b> 가능",
  //       "영상 클릭 시 상세 페이지로 이동",
  //     ],
  //     "상세 페이지": [
  //       "상세 페이지 접속 시 영상이 <b>음소거 상태</b>로 자동 재생",
  //       "우측에는 관련 영상을 무한 스크롤로 가져옴",
  //       "<b>더보기</b>를 클릭하여 해당 영상의 정보를 확인할 수 있음",
  //       "댓글을 작성 및 수정, 삭제 할 수 있으며 하단에 <b>더보기</b> 버튼으로 오래된 댓글을 계속 조회할 수 있음",
  //     ],
  //     "검색 페이지 및 테마": [
  //       "검색 창에 입력 시 관련 영상을 가져오는 조회 페이지로 이동",
  //       "가져온 영상 리스트의 썸네일 마우스 hover 시 확대 및 자동 재생",
  //       "우측 상단에 있는 버튼으로 <b>테마를 변경</b>할 수 있음",
  //     ],
  //   },
  // },
];

export { projectList };
