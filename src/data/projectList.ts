import {
  egg,
  eggMbti,
  eggMbtiMain,
  eggMbti1,
  eggMbti2,
  eggMbti3,
  eggMbti4,
  eggMbti5,
  happymanwon,
  happymanwonThumbnail,
  happymanwonMain,
  happymanwonArchitecture,
  happymanwonApi,
  happymanwonErd,
  happymanwonFigma1,
  happymanwonFigma2,
  happymanwonCategory1,
  happymanwonCategory2,
  happymanwonCategory3,
  happymanwonCommunity1,
  happymanwonCommunity2,
  happymanwonCommunity3,
  happymanwonCommunity4,
  happymanwonMainPage,
  happymanwonMap1,
  happymanwonMap2,
  happymanwonMypage1,
  happymanwonMypage2,
  happymanwonMypage3,
  happymanwonMypage4,
  happymanwonMypage5,
  happymanwonSale1,
  happymanwonSale2,
  happymanwonSale3,
  happymanwonSale4,
  happymanwonSale5,
  beta,
  betaTumbnail,
  betaMain,
  betaFigma,
  betaDuration,
  betaArchitecture,
  betaApi,
  betaErd,
  betaImageDetail,
  betaImageExhibition,
  betaImageGoogleForm,
  betaImageLikeManage,
  betaImageLike,
  betaImageMain,
  betaImagePostManage,
  betaImagePostUpdate,
  betaImagePostUpload,
  betaImageProfile,
  betaImageProfileAdmin,
  betaImageReservationManageAdmin,
  betaImageReservationManage,
  betaImageReview,
  betaImageReviewManage,
  betaImageShow,
  betaImageStoryManage,
  betaImageStory,
  betaImageToss,
  youtubeCloneThumbnail,
  youtubeCloneIcon,
  youtubeCloneMain,
  webBuilder,
  webBuilderThumbnail,
  webBuilderMain,
  webBuilderArchitecture,
  webBuilderApi,
  webBuilderErd,
  webBuilderFigma1,
  webBuilderFigma2,
  webBuilderDesign,
  webBuilderLogin,
  webBuilderManage,
  webBuilderEditor11,
  webBuilderEditor12,
  webBuilderEditor13,
  webBuilderEditor21,
  webBuilderEditor22,
  webBuilderEditor23,
  webBuilderMainPage,
  youtubeCloneMainPage,
  youtubeCloneDetail,
  youtubeCloneSearch,
} from "@/assets/images";

const projectList = [
  {
    projectId: 1,
    name: "egg-mbti",
    type: "개인 프로젝트",
    thumbnail: eggMbti,
    date: "2023-09 ~ 2023-10",
    techStack: [
      ["React", "#d3e5ef"],
      ["Styled-Components", "#dbeddb"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
    ],
    icon: egg,
    title: "[EBTI] 계란 요리 성격 유형 검사",
    team: "1인 프로젝트",
    introduction: "성격 유형 검사를 계란 요리에 비유하여 알려주는 사이트",
    projectMainImg: eggMbtiMain,
    siteLink: "https://egg-mbti.net",
    github: ["https://github.com/yoonth95/EBTI-React"],
    velog: "https://velog.io/@yoonth95/계란-요리-성격-유형-테스트",
    intention: [
      "한 때 유행이었던 성격 유형 검사를 16가지의 계란 요리에 비유하여 성격 및 성장 방법 등을 알려주는 사이트입니다.",
      "초기 단계는 <b>Vanilla JS</b>로 진행을 하고 <b>Firebase</b>로 배포를 했고, 이후에 <b>React</b>로 리팩토링하였습니다.",
      "<b>React</b>, <b>Styled-Components</b>를 사용하여 화면 구성을 했고, <b>AWS</b>를 사용해서 정적 배포를 진행했습니다.",
      "<b>kakao AdFit</b>를 사용해서 광고를 넣어 수익화 적용을 진행했습니다.",
      "<b>ChatGPT</b>를 사용해 계란 요리 유형, 요리와 맞는 성격, 문제, 가중치 등을 설정했습니다.",
      "다양한 일러스트 이미지 등은 <b>MS Bing Image Creator</b>를 사용하여 다양한 이미지를 생성했습니다.",
      "검색엔진 최적화 관련 meta 태그나 robots.txt 설정 등은 진행할 예정입니다.",
    ],
    reference: [
      "kakao AdFit 블로그 포스팅 : https://velog.io/@yoonth95/React-kakao-Adfit-수익화-적용",
      "kakao API : https://developers.kakao.com",
      "ChatGPT : https://chat.openai.com",
      "Bing Image Creator : https://www.bing.com/images/create",
    ],
    projectImgAspectRatio: "1/1",
    projectImgList: [eggMbti1, eggMbti2, eggMbti3, eggMbti4, eggMbti5],
  },
  {
    projectId: 2,
    name: "beta-beta",
    type: "팀 프로젝트",
    thumbnail: betaTumbnail,
    date: "2023-12 ~ 2024-02",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
      ["Amazon RDS", "#ffe2dd"],
    ],
    icon: beta,
    title: "대학생 공연/전시 정보 플랫폼",
    team: "총 3명 (팀장) / 기획 및 FrontEnd 3명, BackEnd 1명",
    introduction: "예체능 분야 대학생들이 자신의 작품을 소개하고 홍보할 수 있는 중앙 집중형 플랫폼",
    projectMainImg: betaMain,
    siteLink: "https://beta-beta.net",
    github: ["https://github.com/FESP-TEAM-1/beta-frontend", "https://github.com/FESP-TEAM-1/beta-backend"],
    intention: [
      "분산된 정보와 홍보의 어려움으로 예체능 분야의 대학생들의 졸업 작품 또는 정기 행사에 관심과 주목을 받기 어려운 상황에서 효과적으로 소개하고 홍보할 수 있는 플랫폼을 개발했습니다.",
      "3주라는 짧은 프로젝트 기간으로 인한 <b>MVP 개발 및 동작 우선 구현</b>을 목표로 진행했습니다.",
      "각자 맡은 파트를 브랜치별로 진행을 했고 PR Merge 시에는 반드시 <b>팀원 모두 코드 리뷰</b>를 작성하게 진행했습니다.",
      "총 3명이서 기획과 프론트엔드 개발을 했고 저는 백엔드 API 개발 및 배포까지 진행했습니다.",
      "3주 프로젝트 기간 이후 버그 수정, 리팩토링, 최적화를 진행했습니다.",
      {
        "<b>Vite</b>": [
          "CRA와 비교 했을 때, 모든 모듈을 한 번에 변환하는 반면 요청 시 동적으로 변환하여 직접 로드하기 때문에 개발 시작 속도가 빠르다는 장점",
          "최소한의 설정으로 eslint 등 사용자 정의 설정을 쉽게 추가할 수 있어서 개발 환경 구성을 Vite로 진행했습니다.",
        ],
      },
      {
        "<b>Zustand</b>": [
          "짧은 러닝 커브와 단일 스토어 관리로 팀원들의 경험을 고려하여 선택했습니다.",
          "경량화된 라이브러리로 프로젝트 크기 및 로딩 시간 최소화하여 다른 상태 관리 라이브러리 대신 진행했습니다.",
          "Provider 사용을 하지 않고 필요한 컴포넌트에 대해서만 트리거하는 시스템이어서 불필요한 리렌더링을 최소화하는 장점이 있어 선택하게 되었습니다.",
        ],
      },
      {
        "<b>Tanstack Query</b>": [
          "서버와의 빈번한 통신을 효율적으로 관리하기 위해 선택했습니다.",
          "자동 데이터 캐싱으로 로딩 시간과 서버 부하를 줄일 수 있어서 사용했습니다.",
          "서버 상태와 클라이언트 데이터를 쉽게 동기화 할 수 있고 백그라운드 데이터 업데이트와 재사용을 용이하게 하는 장점이 있어 선택하게 되었습니다.",
        ],
      },
    ],
    duration: betaDuration,
    architecture: betaArchitecture,
    figma: betaFigma,
    api: betaApi,
    erd: betaErd,
    responsibleRole: [
      "<b>Vite</b> 및 <b>TypeScript</b>를 사용한 프로젝트 초기 설정 (Proxy, 절대 경로 설정 등)",
      "로그인 / 회원가입 페이지 제작",
      "마이페이지 프로필 및 일반회원 마이페이지 제작",
      "<b>JWT</b> 인증 및 쿠키 기반의 보안 로직을 <b>PrivateRoute</b> 컴포넌트에 통합하여 로그인 시스템 강화",
      "<b>ERD</b> 설계 및 <b>API</b> 명세서 작성",
      "<b>Nodemailer</b> 라이브러리를 사용하여 일반 회원 인증, <b>UNIVCERT API</b>를 사용하여 관리자 회원 인증을 위한 인증 코드 이메일 발송 기능 개발",
      "<b>토스페이먼츠 API</b>를 이용한 예매 시스템 개발",
      "AWS S3를 사용하여 이미지 호스팅 및 관리",
      "AWS S3, CloudFront, Route 53을 사용하여 프론트엔드 배포 / EC2, 로드밸런싱, RDS를 사용하여 백엔드 및 데이터베이스 배포",
      "<b>GitHub Actions</b>를 사용하여 AWS S3로의 코드 자동 배포 파이프라인 설계 및 구현. 프로젝트의 소스 코드 변경 시 자동으로 빌드 및 테스트 수행 후 S3 버킷에 업로드 및 CloudFront 캐시 무효화 진행",
    ],
    projectImgAspectRatio: "16/7",
    projectImgList: [
      {
        "메인 페이지": [betaImageMain, betaImageStory],
        "전시/공연 페이지": [betaImageExhibition, betaImageShow],
        "상세 페이지": [betaImageDetail, betaImageGoogleForm, betaImageLike, betaImageReview, betaImageToss],
        "마이 페이지 - 일반회원": [betaImageProfile, betaImageLikeManage, betaImageReservationManage, betaImageReviewManage, betaImageStoryManage],
        "마이 페이지 - 관리자": [
          betaImagePostManage,
          betaImagePostUpdate,
          betaImagePostUpload,
          betaImageProfileAdmin,
          betaImageReservationManageAdmin,
        ],
      },
    ],
    pageDescription: {
      "메인 페이지": [
        "현재 진행중인 공연/전시의 배너(최신순 5개)를 볼 수 있다.",
        "사람들이 업로드한 공연/전시와 관련된 스토리를 확인할 수 있다.",
        "현재 진행 중인 공연/전시를 날짜별로 확인할 수 있다.",
        "일반 회원만 스토리를 업로드 할 수 있다.",
        "사진과 태그를 입력하여 스토리를 업로드 할 수 있다.",
      ],
      "전시/공연 페이지": ["날짜, 지역, 진행상황(진행중, 종료, 예정), 카테고리 등으로 필터링해서 전시/공연 정보를 확인 할 수 있다."],
      "상세 페이지": [
        "정보 탭: 공연/전시 제목, 주최 대학 및 학과, 기간, 장소, 소개글 등을 확인 할 수 있다.",
        "후기/방명록 탭: 공연/전시 감상 후기 및 방명록을 작성할 수 있다.",
        "공연/전시에 좋아요를 누를 수 있다.",
        "예매는 구글폼으로 예매하는 것과 본 사이트에서 직접 예매하는 방법이 있다.",
      ],
      "마이 페이지 - 일반회원": [
        "자신의 프로필을 수정할 수 있다.",
        "자신이 좋아요를 누른 공연/전시를 확인할 수 있으며 공연/전시카드를 클릭하면 해당 공연/전시의 상세정보페이지로 이동한다.",
        "자신이 남긴 후기/방명록을 확인할 수 있고 이를 삭제할 수 있다. 자신이 남긴 후기/방명록을 클릭 시 해당 공연/전시의 상세정보페이지 후기/방명록 탭으로 이동한다.",
        "자신이 예매한 공연/전시 목록을 확인할 수 있다. 이를 클릭 시 해당 공연/전시에 대한 정보가 뜨고 예매를 취소할 수도 있다.",
        "자신이 작성한 스토리를 확인할 수 있고 이를 삭제할 수 있다.",
      ],
      "마이 페이지 - 관리자": [
        "관리자는 자신의 프로필을 수정할 수 있다.",
        "관리자는 자신의 공연/전시를 어떤 회원이 예매했는지 확인할 수 있다.",
        "관리자는 자신이 어떤 공연/전시 게시글을 적었는지 리스트를 확인할 수 있다. 또한 해당 게시글에 대한 댓글을 확인하고 삭제할 수 있다.",
        "관리자는 공연/전시 게시글을 작성할 수 있다. (사진업로드, 공연/전시 대학 및 학과, 공연/전시 기간, 장소, 소개글, 예매 여부, 구글폼 예매/예매대행 등을 작성할 수 있다)",
        "관리자는 공연/전시 게시글을 수정하거나 삭제할 수 있다.",
      ],
    },
    troubleshooting: {
      "<b>S3 이미지 CORS 오류</b>": [
        "S3에 저장된 이미지를 불러온 후 해당 이미지에 작업(파일로 변환, Canvas에 새로 그리는 작업, html2canvas와 같은 라이브러리 사용 등)을 하게 될 경우 CORS 오류가 발생",
        "해결 과정 : Proxy 설정, 캐시 우회 방법",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/135 target=_blank><i><b>https://github.com/FESP-TEAM-1/beta-frontend/issues/135</b></i></a>",
      ],
      "<b>Axios 자격 증명 및 엔드포인트 URL 설정 표준화 작업</b>": [
        "API 요청 시 크로스 오리진 이슈와 쿠키 저장 이슈 발생",
        "개발 환경에서는 Proxy 엔드포인트를 설정했지만 배포 환경에서는 Proxy가 동작하지 않아서 전체 URL을 사용해서 API 요청을 하여 해결",
        "백엔드에서 쿠키 저장 시 httpOnly, sameSite, secure 설정으로 서로 다른 port 도메인을 가지고 있기 때문에 쿠키 저장에서 문제가 발생",
        "axios의 withCredentials 설정을 통해 API 요청에 자동으로 쿠키를 포함 시키도록 설정하여 해결",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/101 target=_blank><i><b>https://github.com/FESP-TEAM-1/beta-frontend/issues/101</b></i></a>",
      ],
      "<b>toast error 여러 번 출력 되는 현상</b>": [
        "메인 페이지에서 총 3개의 API 요청을 진행하는데, 서버거 꺼져 있거나 문제가 발생 시 API는 3개의 에러를 발생시킴 그로 인해 toast 에러 알림 메시지도 3개가 나오게 됨",
        "toast의 limit을 1로 제한 후 clearWaitingQueue를 사용하여 toast 큐에 쌓인 대기 상태 에러를 지움",
        "관련 글 : <a href=https://github.com/FESP-TEAM-1/beta-frontend/issues/127 target=_blank><i><b>https://github.com/FESP-TEAM-1/beta-frontend/issues/127</b></i></a>",
      ],
    },
  },
  {
    projectId: 3,
    name: "happymanwon",
    type: "팀 프로젝트",
    thumbnail: happymanwonThumbnail,
    date: "2023-11 ~ 2023-12",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Styled-Components", "#dbeddb"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
    ],
    icon: happymanwon,
    title: "만원의 행복",
    team: "기획 및 디자이너 1명, FrontEnd 2명, BackEnd 3명",
    introduction: "한 푼이라도 아쉬운 사람들을 위한 착한 가게 소개 웹 서비스",
    projectMainImg: happymanwonMain,
    siteLink: "https://happy-manwon.vercel.app",
    github: ["https://github.com/happymanwon/Frontend"],
    intention: [
      "고물가와 고금리로 인해 국민들의 생활비 부담이 증가하여 만원으로 할 수 있는 것이 매우 제한적입니다. 이러한 사회적 흐름에 발맞춰, 단돈 만원으로 저렴하게 이용할 수 있는 착한 가게 들을 알려주는 공공 서비스를 개발 했습니다.",
      "공모전을 기반으로 진행한 프로젝트로 서울시 착한 가격 업소 API 데이터를 활용하여 만원의 행복 서비스 반응형 웹(Web)환경의 서비스 제공합니다.",
      "프론트엔드와 백엔드 레포지토리를 따로 관리하여 진행했고 Github Webhooks을 사용하여 Discord 알림을 주고 소통하면서 진행했습니다.",
      {
        "<b>Vite</b>": [
          "CRA와 비교 했을 때, 모든 모듈을 한 번에 변환하는 반면 요청 시 동적으로 변환하여 직접 로드하기 때문에 개발 시작 속도가 빠르다는 장점",
          "최소한의 설정으로 eslint 등 사용자 정의 설정을 쉽게 추가할 수 있어서 개발 환경 구성을 Vite로 진행했습니다.",
        ],
      },
      {
        "<b>Zustand</b>": [
          "짧은 러닝 커브와 단일 스토어 관리로 팀원들의 경험을 고려하여 선택했습니다.",
          "경량화된 라이브러리로 프로젝트 크기 및 로딩 시간 최소화하여 다른 상태 관리 라이브러리 대신 진행했습니다.",
          "Provider 사용을 하지 않고 필요한 컴포넌트에 대해서만 트리거하는 시스템이어서 불필요한 리렌더링을 최소화하는 장점이 있어 선택하게 되었습니다.",
        ],
      },
      {
        "<b>Tanstack Query</b>": [
          "서버와의 빈번한 통신을 효율적으로 관리하기 위해 선택했습니다.",
          "자동 데이터 캐싱으로 로딩 시간과 서버 부하를 줄일 수 있어서 사용했습니다.",
          "서버 상태와 클라이언트 데이터를 쉽게 동기화 할 수 있고 백그라운드 데이터 업데이트와 재사용을 용이하게 하는 장점이 있어 선택하게 되었습니다.",
        ],
      },
    ],
    architecture: happymanwonArchitecture,
    figma: [happymanwonFigma1, happymanwonFigma2],
    api: happymanwonApi,
    erd: happymanwonErd,
    responsibleRole: [
      "해당 프로젝트는 다른 프로젝트와의 일정이 겹치는 동안에도 진행되었으며, 프로젝트 초기 설정과 전체적인 페이지 레이아웃 설계에 중점을 두었습니다. 특히, 반응형 디자인에 주력하여 모든 화면 크기에서 사용자 경험이 최적화되도록 했습니다.",
      "<b>Python BeautifulSoup</b> 라이브러리를 활용하여 서울특별시 물가 정보 사이트로부터 착한 가격 업소의 주요 품목 데이터를 크롤링하고 정제된 데이터를 JSON 파일로 변환하여 데이터 저장, 가격 정보 제공 시스템에 기여",
      "전체 페이지 레이아웃 구성 및 반응형 구현과 동시에 공통 컴포넌트 설계",
      "짠지도 및 상세 페이지 지도 서비스 UI 및 기능 제작",
      "<b>Kakao Map API</b>를 사용하여 사용자의 현재 위치 또는 지도에서 현재 보고 있는 곳에서 2km 반경 내의 업소 정보를 지도에 표시",
      "<b>react-spring-bottom-sheet</b> 라이브러리에서 필요한 값들만 사용하여 네이버 지도와 같은 맞춤형 바텀시트를 구현",
      "단짠단짠 페이지 UI 제작",
      "마이페이지 UI 제작",
      "<b>Vercel</b>을 활용하여 애플리케이션 배포. 리다이렉션 규칙 및 API 라우터 설정 진행",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "메인 페이지": happymanwonMainPage,
        "카테고리 페이지": [happymanwonCategory1, happymanwonCategory2, happymanwonCategory3],
        "짠지도 페이지": [happymanwonMap1, happymanwonMap2],
        "짠처리 페이지": [happymanwonSale1, happymanwonSale2, happymanwonSale3, happymanwonSale4, happymanwonSale5],
        "단짠단짠 페이지": [happymanwonCommunity1, happymanwonCommunity2, happymanwonCommunity3, happymanwonCommunity4],
        "로그인 및 마이페이지": [happymanwonMypage1, happymanwonMypage2, happymanwonMypage3, happymanwonMypage4, happymanwonMypage5],
      },
    ],
    pageDescription: {
      "메인 페이지": [
        "검색 창에 원하는 키워드 입력 시 지정한 구역에서 해당 키워드를 가진 가게들의 대한 정보를 볼 수 있는 페이지로 이동",
        "모바일 화면의 경우 좌측 상단에는 현재 본인의 위치에 대한 구역 이름이 출력",
        "구역 이름 클릭 시 보고 싶은 구역 선택",
        "중앙에 있는 카테고리 버튼 클릭 시 지정한 구역에 대한 카테고리 별 가게들의 대한 정보를 볼 수 있는 페이지로 이동",
        "하단의 네비게이션 바를 통해 자유롭게 원하는 항목으로 이동",
      ],
      "카테고리 페이지": [
        "헤더에 카테고리를 누르면 해당 카테고리의 가게로 필터링된 리스트가 보임",
        "개별 사진을 누르면 해당 가게 디테일 페이지로 이동",
        "지역구 selectBox를 통해 원하는 지역구만 필터링된 리스트가 보임",
        "헤더에 가게사진, 가게이름, 지역구, 주메뉴, 좋아요 개수 출력",
        "좋아요 버튼을 통해 가게 좋아요 표시",
        "공유하기 버튼 클릭시, 링크 복사 & 카카오 공유하기 중 선택 가능",
        "가게 영업시간 정보, 메뉴 리스트 및 가격 출력",
        "카카오 지도를 통해 가게의 위치를 가시적인 지도로 출력",
        "복사 버튼을 통해 가게 주소를 클립보드에 복사",
        "주소 하단에 가게 찾아오는길을 출력",
      ],
      "짠지도 페이지": [
        "위치 기반 착한 가게 검색을 제공합니다.",
        "보여줄 가게들에 대해서 핀으로 지도에 출력",
        "핀 클릭 시 가게에 대한 상세 정보 출력",
        "오른쪽 하단 “위치 모양” 클릭 시 현재 위치로 지도 이동",
        "중앙 상단 “현 지도에서 검색” 클릭 시 사용자가 현재 보고 있는 지도 위치에서 반경 2km 가게들을 핀으로 지도에 출력",
        "상단 검색 바에 원하는 키워드 검색 시 해당 키워드를 가지고 있는 가게들에 대해서 핀으로 지도에 출력",
        "하단의 바텀시트를 위로 드래그하여 여러 가게들에 대한 정보 등을 볼 수 있음",
        "가게 클릭 시 (이미지 또는 텍스트) 상세 페이지로 이동",
      ],
      "짠처리 페이지": [
        "가게의 할인 상품을 판매합니다.",
        "헤더에 “구매내역”버튼을 통해 사용자가 구매한 상품이 있는 페이지로 이동",
        "상단 지역구 selectBox를 통해 판매글을 올린 가게들을 지역구별로 필터링",
        "개별 카드 컴포넌트를 누르면 판매 상세 페이지로 이동",
        "상단에 판매상품, 남은수량, 기존가격, 할인율, 판매가격 출력",
        "구매하기 버튼을 누르면 서버와 통신하여 수량이 남았거나, 판매기한이 남았거나, 구매할 수 있는 포인트가 있을 경우 구매 확인이 뜨며, 사용자의 구매내역에 추가",
        "가게 소개 및 가격 출력",
        "카카오 지도를 통해 가게의 위치를 가시적인 지도로 출력",
        "복사 버튼을 통해 가게 주소를 클립보드에 복사",
      ],
      "단짠단짠 페이지": [
        "커뮤니티 기능을 제공합니다.",
        "상단 검색 바에 키워드 입력 시 커뮤니티 게시글의 태그를 검색 키워드로 필터링하여 화면에 출력",
        "“내글보기” 버튼 클릭으로 내가 작성한 게시글만 필터링하여 화면에 출력",
        "게시글 우측 상단의 버튼 클릭 시 신고 및 숨기기 버튼으로 게시글을 신고하거나 본인 기준에서 게시글 숨기기",
        "숨긴 게시글은 “되돌리기” 버튼을 클릭하여 다시 보이게 할 수 있음",
        "이미지는 터치 이벤트로 슬라이드 형태로 볼 수 있음",
        "게시글 클릭 시 게시글 상세 페이지로 이동",
        "헤더에 tagify를 이용해 태그를 입력",
        "하단에 사진첨부, 지도첨부 기능을 활용해서 다중사진과 원하는 가게 지도를 첨부",
        "상단에 옵션 버튼으로 수정, 삭제를 선택",
        "게시글 작성 페이지에서 완료 버튼을 통해 게시글을 올릴 수 있음",
        "글쓴이가 수정 클릭시 글 수정페이지로 이동",
        "게시글 수정 페이지에서 완료 버튼을 통해 특정 게시글 ID 값을 가진 게시글 내용을 수정할 수 있음",
        "글쓴이가 삭제 클릭시 게시글을 삭제할 수 있음",
        "하단의 댓글달기 기능을 이용해 댓글을 작성하면 해당 글에 댓글을 달 수 있음",
      ],
      "로그인 및 마이페이지": [
        "소셜 로그인 시 마이페이지로 이동하여 개인정보 등을 볼 수 있음",
        "프로필 수정 페이지에서 이미지 클릭 시 프로필 사진이나 닉네임을 변경할 수 있음",
        "짠처리 결제 관리 페이지에서 본인이 결제한 가게들의 리스트를 보여줌, QR코드의 사용 여부를 알 수 있고 클릭 시 QR코드 화면으로 이동",
        "충전 및 사용 내역 페이지에서 포인트 충전 및 사용에 대한 내역을 볼 수 있음",
        "커뮤니티 관리 페이지에서 커뮤니티 글에 대해 수정 삭제 가능",
      ],
    },
    troubleshooting: {
      "<b>Vite에서 SVG 컴포넌트화</b>": [
        "최신 버전 Vite에서 React SVG 컴포넌트화 하는 과정에서 오류가 발생",
        "해결 과정 : <b>vite-plugin-svgr</b> 라이브러리 4.0.0 이상 버전에서는 SVG 파일을 가져올 때, <b>?react</b>라는 접미사를 붙여 앨리어싱을 건너뛰어 진행한다.",
        "관련 글 : <a href=https://velog.io/@yoonth95/SVG-파일-React-Component로-가져오기-Vite-TypeScript target=_blank><i><b>https://velog.io/@yoonth95/SVG-파일-React-Component로-가져오기-Vite-TypeScript</b></i></a>",
      ],
    },
  },
  {
    projectId: 4,
    name: "web-builder",
    type: "팀 프로젝트",
    thumbnail: webBuilderThumbnail,
    date: "2023-07 ~ 2023-08",
    techStack: [
      ["React", "#d3e5ef"],
      ["Redux toolkit", "#e8deee"],
      ["Node.js", "#dbeddb"],
      ["MySQL", "#d3e5ef"],
      ["Amazon S3", "#ffe2dd"],
      ["Amazon CloudFront", "#ffe2dd"],
      ["Amazon Route 53", "#ffe2dd"],
      ["Amazon EC2", "#ffe2dd"],
      ["Amazon RDS", "#ffe2dd"],
    ],
    icon: webBuilder,
    title: "웅진씽크빅 웹 빌더 시스템",
    introduction: "웅진 씽크빅 사이트와 연동이 되는 웹 빌더 관리자 페이지 개발",
    team: "총 4명 (팀장) / FrontEnd 4명, BackEnd 1명",
    projectMainImg: webBuilderMain,
    siteLink: "https://web-builder.store",
    github: ["https://github.com/yoonth95/Web-Builder"],
    intention: [
      "개발자나 퍼블리셔가 아닌 누구나 쉽고 빠르게 상세 페이지를 제작 할 수 있는 웹 빌더 시스템을 개발 했습니다.",
      "총 4명이서 프론트엔드 개발을 했고 저는 백엔드 API 개발 및 배포까지 진행했습니다.",
      "웅진 씽크빅 홈페이지를 간편하게 만들 수 있는 관리자 웹 빌더 시스템을 요구해서 진행하게 되었고 디자인 Figma는 제공를 받았습니다.",
      "Figma와 똑같이 하기보단 저희만의 방식대로 진행하는 것을 원하셨고 <b>디자인을 토대로 기획을 더 얹어</b> 개발을 했습니다.",
      "<b>드래그 앤 드랍 기능, 블록 디자인 복원 기능, 블록 배경색 및 여백 기능</b> 등을 추가로 진행하였습니다.",
      {
        "<b>Redux-toolkit</b>": [
          "가장 많이 사용한다는 점과 팀원들의 경험을 고려했을 때, 다른 상태 관리 라이브러리를 공부하는 것 보다 완성도 있는 프로젝트를 만들기 위해 다들 사용해본 Redux를 선택했습니다.",
          "Redux-toolkit은 Redux의 보일러플레이트 코드를 상당히 줄여주고 최적화 및 직관적으로 작성할 수 있어 선택했습니다.",
        ],
      },
      {
        "<b>JWT</b>": [
          "관리자 사이트의 보안이 중요하기 때문에, 회원 인증을 체계적으로 관리할 필요가 있다고 판단하여 사용했습니다.",
          "토큰의 경우 로컬 스토리지가 아닌 CSRF, XSS 방지를 위해 <b>SameSite, HttpOnly, Secure</b> 설정을 하고 쿠키에 저장을 하여 보안을 강화하고 관리를 용이하게 했습니다.",
        ],
      },
    ],
    architecture: webBuilderArchitecture,
    figma: [webBuilderFigma1, webBuilderFigma2],
    api: webBuilderApi,
    erd: webBuilderErd,
    responsibleRole: [
      "로그인 및 회원가입 페이지 제작",
      "<b>JWT</b> 인증 및 쿠키 기반의 보안 로직을 <b>PrivateRoute</b> 컴포넌트에 통합하여 로그인 시스템 강화",
      "메뉴 관리 페이지 UI 및 기능 제작",
      "react-beautiful-dnd 드래그 앤 드랍 라이브러리를 사용하여 관리 페이지의 순서를 유연하게 바꿀 수 있게 했습니다.",
      "디자인 편집 페이지 UI 및 기능 제작",
      "웹 에디터 페이지를 개발하면서 <b>블록 디자인 시스템을 JSON 파일 구성만으로 원하는 디자인을 쉽게 만들 수 있도록</b> 유지보수, 재사용성 측면을 획기적으로 개선",
      "변경 사항 실시간 저장 및 히스토리를 관리하여 <b>블록 디자인을 히스토리 별로 복원하는 기능</b>을 개발",
      "블록 디자인 요소 뿐만 아니라 배경색 및 여백 등도 사용자가 자유롭게 줄 수 있도록 개발",
      "<b>ERD</b> 설계 및 <b>API</b> 명세서 작성",
      "AWS S3를 사용하여 이미지 호스팅 및 관리",
      "Cafe24에서 도매인 구입 후 AWS Route 53으로 도메인 이전 작업 진행",
      "AWS S3, CloudFront, Route 53을 사용하여 프론트엔드 배포 / EC2, 로드밸런싱, RDS를 사용하여 백엔드 및 데이터베이스 배포",
      "<b>GitHub Actions</b>를 사용하여 AWS S3로의 코드 자동 배포 파이프라인 설계 및 구현. 프로젝트의 소스 코드 변경 시 자동으로 빌드 및 테스트 수행 후 S3 버킷에 업로드 및 CloudFront 캐시 무효화 진행",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "관리자 로그인 페이지": webBuilderLogin,
        "메뉴 관리 페이지": webBuilderManage,
        "디자인 관리 페이지": webBuilderDesign,
        "디자인 편집 페이지 (1)": [webBuilderEditor11, webBuilderEditor12, webBuilderEditor13],
        "디자인 편집 페이지 (2)": [webBuilderEditor21, webBuilderEditor22, webBuilderEditor23],
        "웅진 씽크빅 메인 페이지": webBuilderMainPage,
      },
    ],
    pageDescription: {
      "관리자 로그인 페이지": ["로그인을 진행합니다.", "아이디, 비밀번호 일치 여부를 알려줍니다."],
      "메뉴 관리 페이지": [
        "상위 메뉴를 추가 및 수정, 삭제 할 수 있습니다.",
        "상위 메뉴 생성 후 하위 메뉴를 추가 및 수정, 삭제 할 수 있습니다.",
        "상위, 하위 메뉴는 연결될 주소 및 새 창 여부 등을 넣을 수 있습니다.",
        "<b>드롭 다운</b>으로 상위 메뉴에 속한 하위 메뉴를 볼 수 있습니다.",
        "각 메뉴별로 <b>드래그 앤 드랍</b>으로 순서를 자유롭게 바꿀 수 있습니다.",
      ],
      "디자인 관리 페이지": [
        "하위 메뉴 별 디자인을 관리할 수 있는 페이지입니다.",
        "페이지 경로, 속한 상위 메뉴, 업데이트 일시 등을 볼 수 있고 하위 메뉴 이름으로 검색이 가능합니다.",
        "비슷한 디자인의 페이지인 경우 <b>복제</b> 버튼으로 다른 하위 메뉴 페이지의 디자인을 가져올 수 있습니다.",
        "<b>편집</b> 버튼으로 디자인 편집 페이지로 이동할 수 있습니다.",
      ],
      "디자인 편집 페이지 (1)": [
        "디자인 편집 페이지에서 <b>블록별 디자인을 선택</b>할 수 있습니다.",
        "JSON 파일에 있는 <b>6가지의 디자인 패턴</b>이 있습니다. 이는 <b>JSON 파일을 수정하여 추가로 등록</b>할 수 있습니다.",
        "이미지 패턴을 선택 시 블록에 이미지 패턴 디자인이 들어가게 되고 이미지를 첨부할 수 있습니다.",
        "레이아웃 패턴 선택 시 블록에 레이아웃이 들어가게 되는데, 각 레이아웃 마다 또 다른 디자인 패턴을 넣을 수 있습니다.",
      ],
      "디자인 편집 페이지 (2)": [
        "디자인 편집 페이지는 웹 페이지 반응형을 미리 볼 수 있게 <b>PC, Tablet, Mobile</b> 화면을 선택하여 볼 수 있습니다.",
        "각 블록별로 배경색과 위 아래 여백을 줄 수 있습니다.",
        "<b>저장</b> 버튼을 누르면 저장된 시간에 따른 디자인이 저장되게 됩니다. 이는 <b>복원하기</b> 버튼으로 저장된 시간대로 이동하여 이전에 작성한 디자인으로 바뀌게 됩니다.",
      ],
      "웅진 씽크빅 메인 페이지": [
        "원래는 실제 웅진 씽크빅 메인 페이지와 연결하여 확인할 수 있지만 과제형 프로젝트이기 때문에 <b>확인용 테스트 페이지를 따로 제작</b>하였습니다.",
        "메인 페이지에 접근하게 되면 <b>메뉴 관리 페이지</b>에서 만든 메뉴들을 확인할 수 있고 각 하위 메뉴로 접속하면 만들어둔 디자인을 확인할 수 있습니다.",
      ],
    },
  },
  {
    projectId: 5,
    name: "477Tube",
    type: "팀 프로젝트",
    thumbnail: youtubeCloneThumbnail,
    date: "2023-11 ~ 2023-11",
    techStack: [
      ["React", "#d3e5ef"],
      ["TypeScript", "#c8ecf1"],
      ["Tanstack Query", "#ffe494"],
      ["Zustand", "#c7c7c7"],
      ["Supabase", "#3ecf8e"],
    ],
    icon: youtubeCloneIcon,
    title: "477Tube",
    team: "총 3명 (팀장) / 기획 및 FrontEnd 3명, BackEnd 1명",
    introduction: "유튜브 클론 사이트",
    projectMainImg: youtubeCloneMain,
    siteLink: "https://477tube.netlify.app",
    github: ["https://github.com/FESP-TEAM-1/477Tube-project"],
    intention: [
      "<b>Zustand, Tanstack Query, Supabase, YouTube Data API</b> 를 활용하여 동영상 시청이 가능한 반응형 웹 사이트 제작하였습니다.",
      "2주 프로젝트 기간으로 <b>미션별 과제 수행</b>을 진행했습니다.",
      "Zustand, TanstackQuery 등 익숙하지 않은 라이브러리 사용 경험을 높이는 것을 목표로 두웠습니다.",
      "운영서버(YOUTUBE)인지 또는 개발서버(json 데이터)에 따라 개발",
      "각자 맡은 파트를 브랜치별로 진행을 했고 PR Merge 시에는 반드시 <b>팀원 모두 코드 리뷰</b>를 작성하게 진행했습니다.",
    ],
    responsibleRole: [
      "메인 페이지 UI 및 기능 개발",
      "썸네일 마우스 hover 시 화면 확대 후 자동 재생 기능 개발",
      "<b>Tanstack Query</b>를 사용하여 무한 스크롤 구현",
      "메인, 상세, 검색 페이지 반응형",
      "<b>Supabase</b> 초기 설정 및 데이터베이스 설계 및 연결 작업 진행",
      "<b>Netlify</b>를 활용하여 애플리케이션 배포. 리다이렉션 규칙 설정 진행",
    ],
    projectImgAspectRatio: "16/9",
    projectImgList: [
      {
        "메인 페이지": youtubeCloneMainPage,
        "상세 페이지": youtubeCloneDetail,
        "검색 페이지 및 테마": youtubeCloneSearch,
      },
    ],
    pageDescription: {
      "메인 페이지": [
        "Youtube API를 사용해서 현재 Youtube에 올라온 영상들을 띄워줍니다.",
        "<b>무한 스크롤로 여러 영상</b>들을 나눠서 가져옵니다.",
        "<b>썸네일에 마우스 hover 시 확대 및 자동 재생</b>됩니다.",
        "영상 클릭 시 상세 페이지로 이동합니다.",
      ],
      "상세 페이지": [
        "상세 페이지 접속 시 영상이 <b>음소거 상태</b>로 자동 재생 됩니다.",
        "우측에는 관련 영상을 무한 스크롤로 가져옵니다.",
        "<b>더보기</b>를 클릭하여 해당 영상의 정보를 확인할 수 있습니다.",
        "댓글을 작성 및 수정, 삭제 할 수 있으며 하단에 <b>더보기</b> 버튼으로 오래된 댓글을 계속 조회할 수 있습니다.",
      ],
      "검색 페이지 및 테마": [
        "검색 창에 입력 시 관련 영상을 가져오는 조회 페이지로 이동합니다.",
        "가져온 영상 리스트의 썸네일 마우스 hover 시 확대 및 자동 재생됩니다.",
        "우측 상단에 있는 버튼으로 <b>테마를 변경</b>할 수 있습니다.",
      ],
    },
  },
];

export { projectList };
